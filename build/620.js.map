{"version":3,"file":"620.js","mappings":"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","sources":["webpack://slide-blocks/./src/blocks/CustomFooks.js","webpack://slide-blocks/./src/blocks/DraggableBox.js","webpack://slide-blocks/./src/blocks/customStore.js","webpack://slide-blocks/./src/blocks/iframeFooks.js","webpack://slide-blocks/./src/blocks/slide-mv/edit.js"],"sourcesContent":["import { useRef, useEffect, useState } from '@wordpress/element';\r\nimport isEqual from 'lodash/isEqual';\r\n\r\n//useRefで参照したDOM要素の大きさを取得するカスタムフック\r\nexport function useElementWidth() {\r\n  const ref = useRef(null);\r\n  const [width, setWidth] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const resizeObserver = new ResizeObserver(entries => {\r\n      for (let entry of entries) {\r\n        setWidth(entry.contentRect.width);\r\n      }\r\n    });\r\n\r\n    if (ref.current) {\r\n      resizeObserver.observe(ref.current);\r\n    }\r\n\r\n    return () => {\r\n      resizeObserver.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  return [ref, width];\r\n}\r\n\r\n//ブロックの背景色を取得するカスタムフック\r\nexport function useElementBackgroundColor(blockRef, style) {\r\n  const [baseColor, setBaseColor] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (blockRef.current && style) {\r\n      if (style.backgroundColor && !style.backgroundColor.startsWith(\"var(--wp\")) {//backgroundColorが設定されており、それがカスタムプロパティでない\r\n        setBaseColor(style.backgroundColor);\r\n      } else {//レンダリング結果から背景色を取得\r\n        if (blockRef.current) {\r\n          const computedStyles = getComputedStyle(blockRef.current);\r\n          setBaseColor(computedStyles.backgroundColor);\r\n        }\r\n      }\r\n    }\r\n\r\n  }, [style, blockRef]);\r\n\r\n  return baseColor;\r\n}\r\n\r\n//ViewPortの大きさでモバイルを判断(767px以下がモバイル)するカスタムフック\r\nexport function useIsMobile() {\r\n  const [isMobile, setIsMobile] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (typeof window !== 'undefined') {\r\n      const handleResize = () => {\r\n        setIsMobile(window.innerWidth <= 767);\r\n      };\r\n\r\n      window.addEventListener('resize', handleResize);\r\n\r\n      return () => {\r\n        window.removeEventListener('resize', handleResize);\r\n      };\r\n    }\r\n  }, []);\r\n\r\n  return isMobile;\r\n};\r\n\r\nexport function useIsIframeMobile() {\r\n  const [isMobile, setIsMobile] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // iframeのcontentWindowを監視する関数\r\n    const checkIframeSize = () => {\r\n      const iframeInstance = document.getElementsByName('editor-canvas')[0];\r\n      if (iframeInstance && iframeInstance.contentWindow) {\r\n        setIsMobile(iframeInstance.contentWindow.innerWidth <= 767);\r\n      }\r\n    };\r\n\r\n    // iframeのcontentWindowのリサイズイベントにリスナーを追加\r\n    const iframeInstance = document.getElementsByName('editor-canvas')[0];\r\n    if (iframeInstance && iframeInstance.contentWindow) {\r\n      iframeInstance.contentWindow.addEventListener('resize', checkIframeSize);\r\n    }\r\n\r\n    // 初期チェックを実行\r\n    checkIframeSize();\r\n\r\n    // クリーンアップ関数\r\n    return () => {\r\n      if (iframeInstance && iframeInstance.contentWindow) {\r\n        iframeInstance.contentWindow.removeEventListener('resize', checkIframeSize);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return isMobile;\r\n}\r\n\r\n\r\n//たくさんの要素をもつオブジェクトや配列の内容の変化で発火するuseEffect\r\nexport function useDeepCompareEffect(callback, dependencies) {\r\n  const dependenciesRef = useRef();\r\n\r\n  if (!isEqual(dependencies, dependenciesRef.current)) {\r\n    dependenciesRef.current = dependencies;\r\n  }\r\n\r\n  useEffect(() => {\r\n    return callback();\r\n  }, [dependenciesRef.current]);\r\n}\r\n","import { useEffect, useRef } from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\n\nimport {\n  Button,\n  PanelBody,\n  PanelRow,\n  __experimentalUnitControl as UnitControl\n} from '@wordpress/components';\n\nexport const useDraggingMove = (isMovable, blockRef, position, onPositionChange) => {\n  const elmposition = useRef({ x: 0, y: 0 });\n  const isDragging = useRef(false);\n  const mousePosition = useRef({ x: 0, y: 0 });\n\n  useEffect(() => {\n    const element = blockRef.current;\n\n    if (!isMovable) {\n      if (element) {\n        element.classList.remove('itmar_isDraggable');//移動カーソル表示クラス削除\n      }\n      return; // 移動許可がある場合のみ、後続のロジックを実行\n    }\n    //positionの変化に合わせて現在位置を変更\n    const pos_value_x = position.x.match(/(-?\\d+)([%a-zA-Z]+)/);\n    const pos_value_y = position.y.match(/(-?\\d+)([%a-zA-Z]+)/);\n    elmposition.current = { x: parseInt(pos_value_x[1]), y: parseInt(pos_value_y[1]) }\n\n    //イベントハンドラ\n    const handleMouseDown = (event) => {\n      // 移動カーソル表示クラス名を追加します。\n      element.classList.add('itmar_isDraggable');\n      //ドラッグの開始フラグオン\n      isDragging.current = true;\n      //ドラッグ開始の絶対位置\n      mousePosition.current = { x: event.clientX, y: event.clientY };\n    };\n\n    const handleMouseMove = (event) => {\n      if (!isDragging.current) return;//ドラッグ中でなければ処理を中止\n      const dx = event.clientX - mousePosition.current.x;\n      const dy = event.clientY - mousePosition.current.y;\n      //ドラッグ後の位置を保存\n      const newPosition = {\n        x: elmposition.current.x + dx,\n        y: elmposition.current.y + dy,\n      };\n      elmposition.current = newPosition;\n      mousePosition.current = { x: event.clientX, y: event.clientY };//マウス位置の保存\n      //ドラッグによるブロックの一時的移動\n      element.style.transform = `translate(${elmposition.current.x}px, ${elmposition.current.y}px)`;\n    };\n\n    const handleMouseUp = () => {\n      isDragging.current = false;\n      element.style.transform = null;\n      //呼出しもとに要素の位置を返す\n      onPositionChange({ x: `${elmposition.current.x}px`, y: `${elmposition.current.y}px` });\n    };\n    const handleMouseLeave = () => {\n      isDragging.current = false;\n    };\n\n    if (element) {\n      // クラス名を追加します。\n      element.classList.add('itmar_isDraggable');\n    }\n    // イベントハンドラを追加します。\n    element.addEventListener('mousedown', handleMouseDown);\n    element.addEventListener('mousemove', handleMouseMove);\n    element.addEventListener('mouseup', handleMouseUp);\n    element.addEventListener('mouseleave', handleMouseLeave);\n\n    // イベントリスナーを削除するクリーンアップ関数を返します。\n    return () => {\n      element.removeEventListener('mousedown', handleMouseDown);\n      element.removeEventListener('mousemove', handleMouseMove);\n      element.removeEventListener('mouseup', handleMouseUp);\n      element.removeEventListener('mouseleave', handleMouseLeave);\n      element.style.transform = null;\n    };\n  }, [isMovable, blockRef, position, onPositionChange]); // 依存配列に isMovable を含めます\n}\n\nexport default function DraggableBox(props) {\n\n  const position = props.attributes\n\n  //インスペクター内のコントロールからの移動操作\n  const chagePosition = (value, cordinate) => {\n    if (value) {\n      const newPos = { ...position, [cordinate]: value };\n      props.onPositionChange(newPos);\n    }\n  }\n\n  //リセット\n  const resetPos = () => {\n    const newPos = { \"x\": \"0px\", \"y\": \"0px\" };\n    props.onPositionChange(newPos);\n  }\n\n  return (\n    <>\n      <PanelBody\n        title={__(\"Position Setting\", 'block-collections')}\n        initialOpen={true}\n      >\n        <PanelRow\n          className='distance_row'\n        >\n          <UnitControl\n            dragDirection=\"e\"\n            onChange={(value) => chagePosition(value, 'x')}\n            label={__(\"Vertical\", 'block-collections')}\n            value={position?.x || 0}\n          />\n          <UnitControl\n            dragDirection=\"e\"\n            onChange={(value) => chagePosition(value, 'y')}\n            label={__(\"Horizen\", 'block-collections')}\n            value={position?.y || 0}\n          />\n        </PanelRow>\n        <PanelRow\n          className='reset_row'\n        >\n          <Button\n            variant=\"secondary\"\n            onClick={() => resetPos()}\n          >\n            {__(\"Reset\", 'block-collections')}\n          </Button>\n        </PanelRow>\n      </PanelBody>\n    </>\n  )\n}","import { createReduxStore, register } from \"@wordpress/data\";\r\n\r\nconst DEFAULT_STATE = {\r\n\tdisplayedNotices: [],\r\n\tswiperInstances: [],\r\n};\r\n\r\nconst store = createReduxStore(\"itmar-custom/store\", {\r\n\treducer(state = DEFAULT_STATE, action) {\r\n\t\tswitch (action.type) {\r\n\t\t\tcase \"ADD_NOTICE\":\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tdisplayedNotices: [...state.displayedNotices, action.noticeId],\r\n\t\t\t\t};\r\n\t\t\tcase \"RESET_NOTICES\":\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tdisplayedNotices: [],\r\n\t\t\t\t};\r\n\t\t\tcase \"ADD_SWIPER_INSTANCE\": // Swiperインスタンスを追加するアクション\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tswiperInstances: [...state.swiperInstances, action.instance],\r\n\t\t\t\t};\r\n\t\t\tcase \"REMOVE_SWIPER_INSTANCE\": // Swiperインスタンスを削除するアクション\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tswiperInstances: state.swiperInstances.filter(\r\n\t\t\t\t\t\t(inst) => inst.swiper_id !== action.instanceId,\r\n\t\t\t\t\t),\r\n\t\t\t\t};\r\n\t\t\tdefault:\r\n\t\t\t\treturn state;\r\n\t\t}\r\n\t},\r\n\tactions: {\r\n\t\taddNotice(noticeId) {\r\n\t\t\treturn { type: \"ADD_NOTICE\", noticeId };\r\n\t\t},\r\n\t\tresetNotices() {\r\n\t\t\treturn { type: \"RESET_NOTICES\" };\r\n\t\t},\r\n\t\taddSwiperInstance(instance) {\r\n\t\t\t// Swiperインスタンスを追加\r\n\t\t\treturn { type: \"ADD_SWIPER_INSTANCE\", instance };\r\n\t\t},\r\n\t\tremoveSwiperInstance(instanceId) {\r\n\t\t\t// Swiperインスタンスを削除\r\n\t\t\treturn { type: \"REMOVE_SWIPER_INSTANCE\", instanceId };\r\n\t\t},\r\n\t},\r\n\tselectors: {\r\n\t\thasNoticeBeenDisplayed(state, noticeId) {\r\n\t\t\treturn state.displayedNotices.includes(noticeId);\r\n\t\t},\r\n\t\tgetSwiperInstances(state) {\r\n\t\t\t// 全てのSwiperインスタンスを取得\r\n\t\t\treturn state.swiperInstances;\r\n\t\t},\r\n\t\tgetSwiperInstanceById(state, instanceId) {\r\n\t\t\t// IDに基づいて特定のSwiperインスタンスを取得\r\n\t\t\treturn state.swiperInstances.find(\r\n\t\t\t\t(inst) => inst.swiper_id === instanceId,\r\n\t\t\t);\r\n\t\t},\r\n\t},\r\n});\r\n\r\nregister(store);\r\n","import { useEffect } from '@wordpress/element';\r\nimport { useDeepCompareEffect } from './CustomFooks';\r\nimport { ServerStyleSheet } from 'styled-components';\r\nimport { renderToString } from 'react-dom/server';\r\n\r\n\r\nexport function useStyleIframe(StyleComp, attributes) {\r\n  //サイトエディタの場合はiframeにスタイルをわたす。\r\n  useDeepCompareEffect(() => {\r\n    const iframeInstance = document.getElementsByName('editor-canvas')[0];\r\n\r\n    if (iframeInstance) {\r\n      const iframeDocument = iframeInstance.contentDocument || iframeInstance.contentWindow.document;\r\n      const sheet = new ServerStyleSheet();\r\n      renderToString(sheet.collectStyles(<StyleComp attributes={attributes} />));\r\n      const styleTags = sheet.getStyleTags();\r\n      const styleContent = styleTags.replace(/<style[^>]*>|<\\/style>/g, '');\r\n\r\n      const iframeStyleTag = iframeDocument.createElement('style');\r\n      iframeStyleTag.innerHTML = styleContent;\r\n\r\n      // Append the new style tag to the iframe's document head\r\n      iframeDocument.head.appendChild(iframeStyleTag);\r\n      // Return a cleanup function to remove the style tag\r\n      return () => {\r\n        iframeDocument.head.removeChild(iframeStyleTag);\r\n      };\r\n    }\r\n  }, [attributes]);\r\n}\r\n\r\nexport function useFontawesomeIframe() {\r\n  //iframeにfontawesomeを読み込む\r\n  useEffect(() => {\r\n    const iframeInstance = document.getElementsByName('editor-canvas')[0];\r\n\r\n    if (iframeInstance) {\r\n      const iframeDocument = iframeInstance.contentDocument || iframeInstance.contentWindow.document;\r\n      const scriptElement = iframeDocument.createElement(\"script\");\r\n      scriptElement.setAttribute(\"src\", \"../../../assets/fontawesome.js\");\r\n      //scriptElement.setAttribute(\"crossorigin\", \"anonymous\");\r\n\r\n      iframeDocument.body.appendChild(scriptElement);\r\n\r\n      // Return a cleanup function to remove the script tag\r\n      return () => {\r\n        iframeDocument.body?.removeChild(scriptElement);\r\n      };\r\n    }\r\n  }, []);\r\n}\r\n\r\n","import { __ } from \"@wordpress/i18n\";\nimport { StyleComp } from \"./StyleSlide\";\nimport { useStyleIframe } from \"../iframeFooks\";\nimport ShadowStyle, { ShadowElm } from \"../ShadowStyle\";\nimport { useElementBackgroundColor, useIsIframeMobile } from \"../CustomFooks\";\nimport {\n\tuseBlockProps,\n\tuseInnerBlocksProps,\n\tInspectorControls,\n\tBlockControls,\n\t__experimentalPanelColorGradientSettings as PanelColorGradientSettings,\n} from \"@wordpress/block-editor\";\nimport {\n\tPanelBody,\n\tToggleControl,\n\tRangeControl,\n\tRadioControl,\n\tToolbarDropdownMenu,\n\tTextControl,\n\tComboboxControl,\n\t__experimentalBoxControl as BoxControl,\n\t__experimentalBorderBoxControl as BorderBoxControl,\n} from \"@wordpress/components\";\n\nimport \"./editor.scss\";\nimport Swiper from \"swiper\";\nimport {\n\tNavigation,\n\tPagination,\n\tScrollbar,\n\tEffectCards,\n\tEffectCoverflow,\n\tEffectCreative,\n\tEffectCube,\n\tEffectFade,\n\tEffectFlip,\n\tParallax,\n\tThumbs,\n} from \"swiper/modules\";\nimport \"swiper/swiper-bundle.css\";\nimport { useState, useRef, useEffect } from \"@wordpress/element\";\nimport { useSelect, useDispatch } from \"@wordpress/data\";\nimport \"../customStore\";\nimport DraggableBox, { useDraggingMove } from \"../DraggableBox\";\nimport { justifyCenter, justifyLeft, justifyRight } from \"@wordpress/icons\";\n\n//スペースのリセットバリュー\nconst padding_resetValues = {\n\ttop: \"10px\",\n\tleft: \"10px\",\n\tright: \"10px\",\n\tbottom: \"10px\",\n};\n\nconst padding_mobile_resetValues = {\n\ttop: \"20px\",\n\tleft: \"10px\",\n\tright: \"10px\",\n\tbottom: \"20px\",\n};\n\n//ボーダーのリセットバリュー\nconst border_resetValues = {\n\ttop: \"0px\",\n\tleft: \"0px\",\n\tright: \"0px\",\n\tbottom: \"0px\",\n};\n\nconst units = [\n\t{ value: \"px\", label: \"px\" },\n\t{ value: \"em\", label: \"em\" },\n\t{ value: \"rem\", label: \"rem\" },\n];\n\n// アイコンと文字列キーのマッピングを作成\nconst alignIconMap = {\n\tleft: justifyLeft,\n\tcenter: justifyCenter,\n\tright: justifyRight,\n};\n\n//モジュールのマッピング\nconst effectModule = {\n\tfade_single_view: EffectFade,\n\tcoverflow: EffectCoverflow,\n\tcoverflow_2: EffectCoverflow,\n\tcube: EffectCube,\n\tflip: EffectFlip,\n\tcards: EffectCards,\n\tparallax: Parallax,\n\tthumbs: Thumbs,\n};\n\n// 再帰的にブロックを探索して特定のブロックタイプを見つける関数\nconst findAllBlocksOfType = (blocks, blockType) => {\n\tlet foundBlocks = [];\n\tblocks.forEach((block) => {\n\t\tif (block.name === blockType) {\n\t\t\tfoundBlocks.push(block);\n\t\t}\n\n\t\tif (block.innerBlocks && block.innerBlocks.length) {\n\t\t\tfoundBlocks = [\n\t\t\t\t...foundBlocks,\n\t\t\t\t...findAllBlocksOfType(block.innerBlocks, blockType),\n\t\t\t];\n\t\t}\n\t});\n\treturn foundBlocks;\n};\n\nexport default function Edit({ attributes, setAttributes, clientId }) {\n\tconst {\n\t\tswiper_id,\n\t\trelate_id,\n\t\tis_thumbnail,\n\t\tdefault_val,\n\t\tmobile_val,\n\t\tis_shadow,\n\t\tslideInfo,\n\t\tparallax_obj,\n\t\tshadow_element,\n\t} = attributes;\n\n\t//モバイルの判定\n\tconst isMobile = useIsIframeMobile();\n\n\t//ブロックの参照\n\tconst blockRef = useRef(null);\n\tconst blockProps = useBlockProps({\n\t\tref: blockRef, // ここで参照を blockProps に渡しています\n\t});\n\n\t//背景色の取得\n\tconst baseColor = useElementBackgroundColor(blockRef, blockProps.style);\n\n\t//背景色変更によるシャドー属性の書き換え\n\tuseEffect(() => {\n\t\tif (baseColor) {\n\t\t\tsetAttributes({\n\t\t\t\tshadow_element: { ...shadow_element, baseColor: baseColor },\n\t\t\t});\n\t\t\tconst new_shadow = ShadowElm({ ...shadow_element, baseColor: baseColor });\n\t\t\tif (new_shadow) {\n\t\t\t\tsetAttributes({ shadow_result: new_shadow.style });\n\t\t\t}\n\t\t}\n\t}, [baseColor]);\n\n\t//サイトエディタの場合はiframeにスタイルをわたす。\n\tuseStyleIframe(StyleComp, attributes);\n\n\t//移動可能ブロックならドラッグのカスタムフックを付加\n\tconst handlePositionChange = (newPos) => {\n\t\tsetAttributes(\n\t\t\t!isMobile\n\t\t\t\t? { default_val: { ...default_val, position: newPos } }\n\t\t\t\t: { mobile_val: { ...mobile_val, position: newPos } },\n\t\t);\n\t};\n\tuseDraggingMove(\n\t\t!isMobile ? default_val.is_moveable : mobile_val.is_moveable,\n\t\tblockRef,\n\t\t!isMobile ? default_val.position : mobile_val.position,\n\t\thandlePositionChange,\n\t);\n\n\t//インナーブロック\n\tconst TEMPLATE = [[\"itmar/design-group\", {}]];\n\tconst innerBlocksProps = useInnerBlocksProps(\n\t\t{ className: \"swiper-wrapper\" },\n\t\t{\n\t\t\ttemplate: TEMPLATE,\n\t\t\tallowedBlocks: [\"itmar/design-group\"],\n\t\t\ttemplateLock: false,\n\t\t},\n\t);\n\n\t//slideInfo更新によるParallax情報の更新\n\n\tuseEffect(() => {\n\t\tif (slideInfo.effect === \"slide_single_view\" && parallax_obj != null) {\n\t\t\tsetAttributes({\n\t\t\t\tparallax_obj: {\n\t\t\t\t\ttype: slideInfo.singleDirection === \"horizontal\" ? \"x\" : \"y\",\n\t\t\t\t\tscale: parallax_obj.scale,\n\t\t\t\t},\n\t\t\t});\n\t\t} else if (\n\t\t\tslideInfo.effect === \"fade_single_view\" &&\n\t\t\tslideInfo.fadeMotion === \"zoomUp\"\n\t\t) {\n\t\t\tsetAttributes({\n\t\t\t\tparallax_obj: {\n\t\t\t\t\ttype: \"scale\",\n\t\t\t\t\tscale: parallax_obj?.scale,\n\t\t\t\t\tunit: \"\",\n\t\t\t\t},\n\t\t\t});\n\t\t} else {\n\t\t\tsetAttributes({ parallax_obj: null });\n\t\t}\n\t}, [slideInfo]);\n\n\t//スライドにしているitmar/design-groupに必要な情報を記録する\n\tconst innerBlocks = useSelect(\n\t\t(select) => {\n\t\t\treturn select(\"core/block-editor\").getBlocks(clientId);\n\t\t},\n\t\t[clientId],\n\t);\n\n\tconst { updateBlockAttributes } = useDispatch(\"core/block-editor\");\n\n\tuseEffect(() => {\n\t\tinnerBlocks.forEach((innerBlock) => {\n\t\t\tif (innerBlock.name === \"itmar/design-group\") {\n\t\t\t\t//このブロックのitmar/design-groupのis_swiper属性はtrueにする\n\t\t\t\tconst swiper_flg = { is_swiper: true };\n\t\t\t\t//Parallaxの情報をitmar/design-groupに記録する\n\t\t\t\tconst parallax_prm =\n\t\t\t\t\tparallax_obj != null\n\t\t\t\t\t\t? { parallax_obj: parallax_obj }\n\t\t\t\t\t\t: { parallax_obj: null };\n\t\t\t\tupdateBlockAttributes(innerBlock.clientId, {\n\t\t\t\t\t...innerBlock.attributes,\n\t\t\t\t\t...swiper_flg,\n\t\t\t\t\t...parallax_prm,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}, [innerBlocks.length, parallax_obj, clientId]);\n\n\t//コアイメージを拡張するためcore/imageにitmar_ex_blockクラスをつける\n\tconst imageBlocks = findAllBlocksOfType(innerBlocks, \"core/image\");\n\n\tuseEffect(() => {\n\t\timageBlocks.forEach((imageBlock) => {\n\t\t\tupdateBlockAttributes(imageBlock.clientId, {\n\t\t\t\t...imageBlock.attributes,\n\t\t\t\tclassName: \"itmar_ex_block\",\n\t\t\t});\n\t\t});\n\t}, [innerBlocks.length, imageBlocks, clientId]);\n\n\t//エディタ内のすべてのslide-mvを取得\n\tconst editorBlocks = useSelect((select) => {\n\t\treturn select(\"core/block-editor\").getBlocks();\n\t}, []); //エディタ内のブロックを取得\n\n\tconst { hasNoticeBeenDisplayed } = useSelect((select) => ({\n\t\thasNoticeBeenDisplayed: select(\"itmar-custom/store\").hasNoticeBeenDisplayed,\n\t})); //カスタムストアを取得\n\tconst { createNotice } = useDispatch(\"core/notices\");\n\tconst { addNotice, resetNotices } = useDispatch(\"itmar-custom/store\");\n\t//自分以外のid格納用の配列\n\tconst [relateIDs, setRelateIDs] = useState([]);\n\n\tuseEffect(() => {\n\t\tconst blocks = findAllBlocksOfType(editorBlocks, \"itmar/slide-mv\");\n\n\t\t// 他のすべてのブロックのswiper_idを格納する配列を生成\n\t\tconst otherSwiperIds = blocks\n\t\t\t.filter((block) => block.clientId !== clientId) // 現在のブロックを除外\n\t\t\t.map((block) => {\n\t\t\t\t// swiper_idを持つオブジェクトを生成\n\t\t\t\tconst id = block.attributes.swiper_id;\n\t\t\t\treturn { value: id, label: id };\n\t\t\t})\n\t\t\t.filter((id) => id != null); // undefinedまたはnullのidを除外\n\t\tsetRelateIDs(otherSwiperIds);\n\n\t\t// swiper_idの重複を検出するロジック（オブジェクトの配列を扱う方法に変更）\n\t\tconst hasDuplicates = otherSwiperIds.some(\n\t\t\t(item) => item.value === swiper_id,\n\t\t);\n\n\t\tif (hasDuplicates) {\n\t\t\tconst noticeId = \"duplicate_swiper_id\";\n\t\t\t//同じIDのブロックが存在し,エラーメッセージが表示されていなければ、エラーメッセージを出す\n\t\t\tif (!hasNoticeBeenDisplayed(noticeId)) {\n\t\t\t\tcreateNotice(\n\t\t\t\t\t\"error\",\n\t\t\t\t\t__(\n\t\t\t\t\t\t\"A block with the same swiper ID exists. Please change your ID.\",\n\t\t\t\t\t\t\"slide-blocks\",\n\t\t\t\t\t),\n\t\t\t\t\t{ type: \"snackbar\" },\n\t\t\t\t);\n\t\t\t\taddNotice(noticeId);\n\t\t\t}\n\t\t} else {\n\t\t\t// エラー状態が偽（つまり、エラーが解消された）場合、表示済みの通知をリセット\n\t\t\tresetNotices();\n\t\t}\n\t}, [editorBlocks]);\n\n\t//Swiperエフェクトのオプションをマッピング\n\tconst parallax_option = parallax_obj != null ? { parallax: true } : {}; //parallax_optionを定義\n\tconst effectOption = {\n\t\tnone: {\n\t\t\tcenteredSlides: slideInfo.isActiveCenter,\n\t\t\tspeed: slideInfo.slideSpeed,\n\t\t\tslidesPerView: isMobile\n\t\t\t\t? slideInfo.mobilePerView\n\t\t\t\t: slideInfo.defaultPerView,\n\t\t\tspaceBetween: isMobile\n\t\t\t\t? slideInfo.mobileBetween\n\t\t\t\t: slideInfo.defaultBetween,\n\t\t},\n\t\tslide_single_view: {\n\t\t\t...{\n\t\t\t\tdirection: slideInfo.singleDirection,\n\t\t\t\tloopAdditionalSlides: 1,\n\t\t\t\tspeed: slideInfo.slideSpeed,\n\t\t\t\tallowTouchMove: false,\n\t\t\t},\n\t\t\t...parallax_option,\n\t\t},\n\t\tfade_single_view: {\n\t\t\t...{\n\t\t\t\tspeed: slideInfo.slideSpeed,\n\t\t\t\teffect: \"fade\",\n\t\t\t\tfadeEffect: {\n\t\t\t\t\tcrossFade: true,\n\t\t\t\t},\n\t\t\t},\n\t\t\t...parallax_option,\n\t\t},\n\t\tcoverflow: {\n\t\t\tcenteredSlides: true,\n\t\t\t//slidesPerView: 'auto',\n\t\t\tslidesPerView: 3,\n\t\t\tspaceBetween: isMobile\n\t\t\t\t? slideInfo.mobileBetween\n\t\t\t\t: slideInfo.defaultBetween,\n\t\t\teffect: \"coverflow\",\n\t\t\tcoverflowEffect: {\n\t\t\t\trotate: 50, // (前後のスライドの回転)\n\t\t\t\tdepth: 100, // (前後のスライドの奥行)\n\t\t\t\tstretch: isMobile ? 50 : 0, // (スライド間のスペース)\n\t\t\t\tmodifier: 1, // (rotate・depth・stretchの値を乗算する)\n\t\t\t\tscale: 0.9, // (前後のスライドのサイズ比率)\n\t\t\t\tslideShadows: true, // (前後のスライド表面の影の有無)\n\t\t\t},\n\t\t},\n\t\tcoverflow_2: {\n\t\t\tspeed: 500,\n\t\t\t//autoplay:true,\n\t\t\tcenteredSlides: true,\n\t\t\tslidesPerView: \"auto\",\n\t\t\tslideToClickedSlide: true,\n\t\t\teffect: \"coverflow\",\n\t\t\tcoverflowEffect: {\n\t\t\t\trotate: 0,\n\t\t\t\tslideShadows: false,\n\t\t\t\tstretch: 100,\n\t\t\t},\n\t\t},\n\t\tcube: {\n\t\t\tspeed: 800,\n\t\t\teffect: \"cube\",\n\t\t\tcubeEffect: {\n\t\t\t\tslideShadows: true, // スライド表面の影の有無\n\t\t\t\tshadow: true, // スライド下の影の有無\n\t\t\t\tshadowOffset: 40, // スライド下の影の位置（px）\n\t\t\t\tshadowScale: 0.94, //スライド下の影のサイズ比率（0~1）\n\t\t\t},\n\t\t\ton: {\n\t\t\t\t// トランジション開始時\n\t\t\t\tslideChangeTransitionStart: function () {\n\t\t\t\t\tthis.el.classList.remove(\"scale-in\");\n\t\t\t\t\tthis.el.classList.add(\"scale-out\");\n\t\t\t\t},\n\t\t\t\t// トランジション終了時\n\t\t\t\tslideChangeTransitionEnd: function () {\n\t\t\t\t\tthis.el.classList.remove(\"scale-out\");\n\t\t\t\t\tthis.el.classList.add(\"scale-in\");\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tflip: {\n\t\t\teffect: \"flip\",\n\t\t\tflipEffect: {\n\t\t\t\tlimitRotation: true,\n\t\t\t\tslideShadows: true,\n\t\t\t},\n\t\t},\n\t\tcards: {\n\t\t\teffect: \"cards\",\n\t\t\tcardsEffect: {\n\t\t\t\tperSlideOffset: 8,\n\t\t\t\tperSlideRotate: 2,\n\t\t\t\trotate: true,\n\t\t\t\tslideShadows: true,\n\t\t\t},\n\t\t},\n\t};\n\n\t//swiperオブジェクトを参照して初期化\n\tconst swiperRef = useRef(null);\n\tconst swiperInstance = useRef(null); // Swiperインスタンスを保持するためのref\n\tconst { addSwiperInstance, removeSwiperInstance } =\n\t\tuseDispatch(\"itmar-custom/store\"); //Swiperインスタンスの格納用カスタムストア\n\tconst [storeObj, setStoreObj] = useState(null); //カスタムストア格納用環境変数\n\n\t//スワイパーオブジェクトの生成関数\n\tconst createSwiperObj = () => {\n\t\tconst parentElement = swiperRef.current.parentElement;\n\n\t\t//オプトインするモジュールの配列\n\t\tlet moduleArray = [];\n\n\t\t//スワイパーのオプションを生成\n\t\tlet swiperOptions = {\n\t\t\tsimulateTouch: false,\n\t\t\tloop: slideInfo.loop,\n\t\t};\n\t\t//サムネイルスライダーに指定されているとき\n\t\tif (is_thumbnail) {\n\t\t\tswiperOptions = {\n\t\t\t\t...swiperOptions,\n\t\t\t\twatchSlidesProgress: true,\n\t\t\t\twatchSlidesVisibility: true,\n\t\t\t};\n\t\t}\n\t\t//ナビゲーションのセット\n\t\tif (slideInfo.navigation.disp) {\n\t\t\tmoduleArray = [...moduleArray, Navigation];\n\t\t\tconst nextButton = parentElement.querySelector(`.${swiper_id}-next`);\n\t\t\tconst prevButton = parentElement.querySelector(`.${swiper_id}-prev`);\n\t\t\tswiperOptions.navigation = {\n\t\t\t\tnextEl: nextButton,\n\t\t\t\tprevEl: prevButton,\n\t\t\t};\n\t\t}\n\t\t//ページネーションのセット\n\t\tif (slideInfo.pagination.disp) {\n\t\t\tmoduleArray = [...moduleArray, Pagination];\n\t\t\tconst pagination = parentElement.querySelector(\n\t\t\t\t`.${swiper_id}-pagination`,\n\t\t\t);\n\t\t\tswiperOptions.pagination = {\n\t\t\t\tel: pagination,\n\t\t\t};\n\t\t}\n\t\t//スクロールバーのセット\n\t\tif (slideInfo.scrollbar.disp) {\n\t\t\tmoduleArray = [...moduleArray, Scrollbar];\n\t\t\tconst scrollbar = parentElement.querySelector(`.${swiper_id}-scrollbar`);\n\t\t\tswiperOptions.scrollbar = {\n\t\t\t\tel: scrollbar,\n\t\t\t};\n\t\t}\n\n\t\t//エフェクトのセット\n\t\tif (slideInfo.effect) {\n\t\t\tif (effectModule[slideInfo.effect]) {\n\t\t\t\tmoduleArray = [...moduleArray, effectModule[slideInfo.effect]];\n\t\t\t}\n\t\t\tswiperOptions = { ...swiperOptions, ...effectOption[slideInfo.effect] };\n\t\t}\n\n\t\t//モジュールを追加\n\t\tmoduleArray = [\n\t\t\t...moduleArray,\n\t\t\teffectModule[\"parallax\"],\n\t\t\teffectModule[\"thumbs\"],\n\t\t];\n\t\tswiperOptions.modules = moduleArray;\n\n\t\t//インスタンス初期化の実行\n\t\tconst instance = new Swiper(swiperRef.current, swiperOptions);\n\t\tswiperInstance.current = instance;\n\t\t//格納用オブジェクトの生成\n\t\tconst swiperObj = {\n\t\t\tinstance: instance,\n\t\t\tswiper_id: swiper_id,\n\t\t\trelate_id: relate_id,\n\t\t\tis_thumbnail: is_thumbnail,\n\t\t};\n\n\t\t//格納用の環境変数に保存\n\t\tsetStoreObj(swiperObj);\n\t};\n\n\t//スワイパーオブジェクト構築の実行\n\tuseEffect(() => {\n\t\tif (swiperRef.current) {\n\t\t\t// 既存のSwiperインスタンスがあれば破棄\n\t\t\tif (swiperInstance.current) {\n\t\t\t\t// Swiper インスタンスを破棄する前に、動的に生成された DOM 要素を削除\n\t\t\t\tconst paginationBullets =\n\t\t\t\t\tswiperRef.current.parentElement.querySelectorAll(\n\t\t\t\t\t\t\".swiper-pagination-bullet\",\n\t\t\t\t\t);\n\t\t\t\tpaginationBullets.forEach((bullet) => bullet.remove());\n\n\t\t\t\tswiperInstance.current.destroy(false, true);\n\t\t\t}\n\t\t\t//エフェクトでセットされた要素等を削除\n\t\t\tconst slides = swiperRef.current.querySelectorAll(\".swiper-slide\");\n\t\t\tslides.forEach((slide) => {\n\t\t\t\t//Parallax等でついていたスタイルを削除\n\t\t\t\tconst firstDiv = slide.querySelector(\"div\"); // 直下のdiv要素を取得\n\t\t\t\tif (firstDiv) {\n\t\t\t\t\tfirstDiv.removeAttribute(\"style\"); // 直下のdiv要素のstyle属性を削除\n\t\t\t\t}\n\t\t\t\t//キューブやカードのシャドーを削除\n\t\t\t\tconst shadowDivs = slide.querySelectorAll(\n\t\t\t\t\t'div[class^=\"swiper-slide-shadow\"]',\n\t\t\t\t);\n\t\t\t\tshadowDivs.forEach((div) => {\n\t\t\t\t\tdiv.remove(); // 各div要素を削除\n\t\t\t\t});\n\t\t\t});\n\t\t\tconst cubeShadow = swiperRef.current.querySelectorAll(\n\t\t\t\t'div[class^=\"swiper-cube-shadow\"]',\n\t\t\t);\n\t\t\tcubeShadow.forEach((div) => {\n\t\t\t\tdiv.remove(); // キューブのシャドーを削除\n\t\t\t});\n\t\t\t//構築\n\t\t\tcreateSwiperObj();\n\t\t}\n\t}, [\n\t\tinnerBlocks.length,\n\t\tslideInfo,\n\t\tparallax_obj,\n\t\tisMobile,\n\t\tswiper_id,\n\t\trelate_id,\n\t\tis_thumbnail,\n\t]);\n\t//カスタムストアを取得してイベントハンドラを設定\n\tuseSelect(\n\t\t(select) => {\n\t\t\t// const allObj = select(\"itmar-custom/store\").getSwiperInstances();\n\t\t\t// console.log(allObj);\n\t\t\tconst relateObj =\n\t\t\t\tselect(\"itmar-custom/store\").getSwiperInstanceById(relate_id);\n\t\t\tif (storeObj && relateObj) {\n\t\t\t\tif (relateObj.is_thumbnail) {\n\t\t\t\t\tstoreObj.instance.thumbs.swiper = relateObj.instance;\n\t\t\t\t\tstoreObj.instance.thumbs.init();\n\t\t\t\t\tstoreObj.instance.thumbs.update(true);\n\t\t\t\t} else if (!storeObj.is_thumbnail) {\n\t\t\t\t\tstoreObj.instance.on(\"slideChangeTransitionStart\", (slider) => {\n\t\t\t\t\t\trelateObj.instance.slideToLoop(slider.realIndex, undefined, false);\n\t\t\t\t\t});\n\t\t\t\t\trelateObj.instance.on(\"slideChangeTransitionStart\", (slider) => {\n\t\t\t\t\t\tstoreObj.instance.slideToLoop(slider.realIndex, undefined, false);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t[storeObj],\n\t);\n\n\t//swiperインスタンスをカスタムストアに格納\n\tuseEffect(() => {\n\t\tif (storeObj) {\n\t\t\taddSwiperInstance(storeObj);\n\t\t\t// コンポーネントのクリーンアップ時にインスタンスを削除\n\t\t\treturn () => {\n\t\t\t\tremoveSwiperInstance(storeObj.swiper_id); // ここでIDを使用\n\t\t\t\t//swiperInstance.current.instance.destroy();\n\t\t\t};\n\t\t}\n\t}, [storeObj]);\n\n\t//ナビゲーションの色情報の更新関数\n\tconst [navigationBgColor, setNavigationBgColor] = useState(\n\t\tslideInfo.navigation.bgColor,\n\t);\n\tconst [navigationBgGradient, setNavigationBgGradient] = useState(\n\t\tslideInfo.navigation.bgGradient,\n\t);\n\tuseEffect(() => {\n\t\tconst base_color = !(navigationBgColor === undefined)\n\t\t\t? navigationBgColor\n\t\t\t: \"var(--wp--preset--color--content-back)\";\n\n\t\tsetAttributes({\n\t\t\tslideInfo: {\n\t\t\t\t...slideInfo,\n\t\t\t\tnavigation: {\n\t\t\t\t\t...slideInfo.navigation,\n\t\t\t\t\tbgColor: navigationBgColor === undefined ? \"\" : navigationBgColor,\n\t\t\t\t\tbgGradient: navigationBgGradient,\n\t\t\t\t\tshadow_element: {\n\t\t\t\t\t\t...slideInfo.navigation.shadow_element,\n\t\t\t\t\t\tbaseColor: base_color,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t}, [navigationBgColor, navigationBgGradient]);\n\n\treturn (\n\t\t<>\n\t\t\t<InspectorControls group=\"settings\">\n\t\t\t\t<PanelBody\n\t\t\t\t\ttitle={__(\"Slide Settings\", \"slide-blocks\")}\n\t\t\t\t\tinitialOpen={true}\n\t\t\t\t\tclassName=\"form_design_ctrl\"\n\t\t\t\t>\n\t\t\t\t\t<PanelBody\n\t\t\t\t\t\ttitle={__(\"Global Setting\", \"slide-blocks\")}\n\t\t\t\t\t\tinitialOpen={false}\n\t\t\t\t\t>\n\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\tlabel={__(\"Slide ID\", \"slide-blocks\")}\n\t\t\t\t\t\t\tvalue={swiper_id}\n\t\t\t\t\t\t\tonChange={(value) => setAttributes({ swiper_id: value })}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<ComboboxControl\n\t\t\t\t\t\t\tlabel={__(\"ID of the associated slider\", \"slide-blocks\")}\n\t\t\t\t\t\t\toptions={relateIDs}\n\t\t\t\t\t\t\tvalue={relate_id}\n\t\t\t\t\t\t\tonChange={(newValue) => {\n\t\t\t\t\t\t\t\tsetAttributes({ relate_id: newValue });\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\tlabel={__(\"Make it a thumbnail slider\", \"slide-blocks\")}\n\t\t\t\t\t\t\tchecked={is_thumbnail}\n\t\t\t\t\t\t\tonChange={(newVal) => {\n\t\t\t\t\t\t\t\tsetAttributes({ is_thumbnail: newVal });\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{is_thumbnail && (\n\t\t\t\t\t\t\t<PanelBody\n\t\t\t\t\t\t\t\ttitle={__(\"Active Effect\", \"slide-blocks\")}\n\t\t\t\t\t\t\t\tinitialOpen={true}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<RangeControl\n\t\t\t\t\t\t\t\t\tvalue={slideInfo.activeSlideEffect?.blur}\n\t\t\t\t\t\t\t\t\tlabel={__(\"Blur(px)\", \"slide-blocks\")}\n\t\t\t\t\t\t\t\t\tmax={10}\n\t\t\t\t\t\t\t\t\tmin={0}\n\t\t\t\t\t\t\t\t\tstep={1}\n\t\t\t\t\t\t\t\t\tonChange={(newVal) => {\n\t\t\t\t\t\t\t\t\t\tsetAttributes({\n\t\t\t\t\t\t\t\t\t\t\tslideInfo: {\n\t\t\t\t\t\t\t\t\t\t\t\t...slideInfo,\n\t\t\t\t\t\t\t\t\t\t\t\tactiveSlideEffect: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t...(slideInfo.activeSlideEffect ?? {}),\n\t\t\t\t\t\t\t\t\t\t\t\t\tblur: newVal,\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\twithInputField={true}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<RangeControl\n\t\t\t\t\t\t\t\t\tvalue={slideInfo.activeSlideEffect?.opacity}\n\t\t\t\t\t\t\t\t\tlabel={__(\"Opacity\", \"slide-blocks\")}\n\t\t\t\t\t\t\t\t\tmax={1}\n\t\t\t\t\t\t\t\t\tmin={0}\n\t\t\t\t\t\t\t\t\tstep={0.1}\n\t\t\t\t\t\t\t\t\tonChange={(newVal) => {\n\t\t\t\t\t\t\t\t\t\tsetAttributes({\n\t\t\t\t\t\t\t\t\t\t\tslideInfo: {\n\t\t\t\t\t\t\t\t\t\t\t\t...slideInfo,\n\t\t\t\t\t\t\t\t\t\t\t\tactiveSlideEffect: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t...(slideInfo.activeSlideEffect ?? {}),\n\t\t\t\t\t\t\t\t\t\t\t\t\topacity: newVal,\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\twithInputField={true}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<RangeControl\n\t\t\t\t\t\t\t\t\tvalue={slideInfo.activeSlideEffect?.zoom}\n\t\t\t\t\t\t\t\t\tlabel={__(\"Zoom\", \"slide-blocks\")}\n\t\t\t\t\t\t\t\t\tmax={3}\n\t\t\t\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\t\t\t\tstep={0.1}\n\t\t\t\t\t\t\t\t\tonChange={(newVal) => {\n\t\t\t\t\t\t\t\t\t\tsetAttributes({\n\t\t\t\t\t\t\t\t\t\t\tslideInfo: {\n\t\t\t\t\t\t\t\t\t\t\t\t...slideInfo,\n\t\t\t\t\t\t\t\t\t\t\t\tactiveSlideEffect: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t...(slideInfo.activeSlideEffect ?? {}),\n\t\t\t\t\t\t\t\t\t\t\t\t\tzoom: newVal,\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\twithInputField={true}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<ComboboxControl\n\t\t\t\t\t\t\t\t\tlabel={__(\"Image Blend Mode\", \"slide-blocks\")}\n\t\t\t\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t\t\t\t{ value: \"nomal\", label: \"Nomal\" },\n\t\t\t\t\t\t\t\t\t\t{ value: \"hard-light\", label: \"Hard Light\" },\n\t\t\t\t\t\t\t\t\t\t{ value: \"difference\", label: \"Difference\" },\n\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\tvalue={slideInfo.activeSlideEffect?.blend}\n\t\t\t\t\t\t\t\t\tonChange={(newVal) => {\n\t\t\t\t\t\t\t\t\t\tsetAttributes({\n\t\t\t\t\t\t\t\t\t\t\tslideInfo: {\n\t\t\t\t\t\t\t\t\t\t\t\t...slideInfo,\n\t\t\t\t\t\t\t\t\t\t\t\tactiveSlideEffect: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t...(slideInfo.activeSlideEffect ?? {}),\n\t\t\t\t\t\t\t\t\t\t\t\t\tblend: newVal,\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<BorderBoxControl\n\t\t\t\t\t\t\t\t\tlabel={__(\"Borders\", \"slide-blocks\")}\n\t\t\t\t\t\t\t\t\tonChange={(newVal) => {\n\t\t\t\t\t\t\t\t\t\tsetAttributes({\n\t\t\t\t\t\t\t\t\t\t\tslideInfo: {\n\t\t\t\t\t\t\t\t\t\t\t\t...slideInfo,\n\t\t\t\t\t\t\t\t\t\t\t\tactiveSlideEffect: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t...(slideInfo.activeSlideEffect ?? {}),\n\t\t\t\t\t\t\t\t\t\t\t\t\tborder: newVal,\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tvalue={slideInfo.activeSlideEffect?.border}\n\t\t\t\t\t\t\t\t\tallowReset={true} // リセットの可否\n\t\t\t\t\t\t\t\t\tresetValues={border_resetValues} // リセット時の値\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</PanelBody>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\tlabel={__(\"Loop\", \"slide-blocks\")}\n\t\t\t\t\t\t\tchecked={slideInfo.loop}\n\t\t\t\t\t\t\tonChange={(newVal) => {\n\t\t\t\t\t\t\t\tsetAttributes({ slideInfo: { ...slideInfo, loop: newVal } });\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\tlabel={__(\"Is AutoPlay\", \"slide-blocks\")}\n\t\t\t\t\t\t\tchecked={slideInfo.is_autoplay}\n\t\t\t\t\t\t\tonChange={(newVal) => {\n\t\t\t\t\t\t\t\tsetAttributes({\n\t\t\t\t\t\t\t\t\tslideInfo: { ...slideInfo, is_autoplay: newVal },\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{slideInfo.is_autoplay && (\n\t\t\t\t\t\t\t<RangeControl\n\t\t\t\t\t\t\t\tvalue={slideInfo.autoplay}\n\t\t\t\t\t\t\t\tlabel={__(\"Autoplay\", \"slide-blocks\")}\n\t\t\t\t\t\t\t\tmax={10000}\n\t\t\t\t\t\t\t\tmin={0}\n\t\t\t\t\t\t\t\tstep={500}\n\t\t\t\t\t\t\t\tonChange={(newVal) => {\n\t\t\t\t\t\t\t\t\tsetAttributes({\n\t\t\t\t\t\t\t\t\t\tslideInfo: { ...slideInfo, autoplay: newVal },\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\twithInputField={true}\n\t\t\t\t\t\t\t\thelp={__(\n\t\t\t\t\t\t\t\t\t\"It will automatically slide at the interval you entered. If set to 0, it will not slide automatically.\",\n\t\t\t\t\t\t\t\t\t\"slide-blocks\",\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t<div className=\"itmar_title_type\">\n\t\t\t\t\t\t\t<RadioControl\n\t\t\t\t\t\t\t\tlabel={__(\"Effect Type\", \"slide-blocks\")}\n\t\t\t\t\t\t\t\tselected={slideInfo.effect}\n\t\t\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t\t\t{ label: __(\"None\", \"slide-blocks\"), value: \"none\" },\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tlabel: __(\"Slide Single\", \"slide-blocks\"),\n\t\t\t\t\t\t\t\t\t\tvalue: \"slide_single_view\",\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tlabel: __(\"Fade Single\", \"slide-blocks\"),\n\t\t\t\t\t\t\t\t\t\tvalue: \"fade_single_view\",\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tlabel: __(\"Coverflow 1\", \"slide-blocks\"),\n\t\t\t\t\t\t\t\t\t\tvalue: \"coverflow\",\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tlabel: __(\"Coverflow 2\", \"slide-blocks\"),\n\t\t\t\t\t\t\t\t\t\tvalue: \"coverflow_2\",\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{ label: __(\"Cube\", \"slide-blocks\"), value: \"cube\" },\n\t\t\t\t\t\t\t\t\t{ label: __(\"Flip\", \"slide-blocks\"), value: \"flip\" },\n\t\t\t\t\t\t\t\t\t{ label: __(\"Cards\", \"slide-blocks\"), value: \"cards\" },\n\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\tonChange={(newVal) => {\n\t\t\t\t\t\t\t\t\tsetAttributes({\n\t\t\t\t\t\t\t\t\t\tslideInfo: { ...slideInfo, effect: newVal },\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{(slideInfo.effect === \"none\" ||\n\t\t\t\t\t\t\tslideInfo.effect === \"coverflow_2\") && (\n\t\t\t\t\t\t\t<RangeControl\n\t\t\t\t\t\t\t\tlabel={\n\t\t\t\t\t\t\t\t\t!isMobile\n\t\t\t\t\t\t\t\t\t\t? __(\"SlidesPerView(desk top)\", \"slide-blocks\")\n\t\t\t\t\t\t\t\t\t\t: __(\"SlidesPerView(mobile)\", \"slide-blocks\")\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tvalue={\n\t\t\t\t\t\t\t\t\t!isMobile ? slideInfo.defaultPerView : slideInfo.mobilePerView\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tmax={20}\n\t\t\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\t\t\tstep={0.1}\n\t\t\t\t\t\t\t\tonChange={(newVal) =>\n\t\t\t\t\t\t\t\t\tsetAttributes(\n\t\t\t\t\t\t\t\t\t\t!isMobile\n\t\t\t\t\t\t\t\t\t\t\t? { slideInfo: { ...slideInfo, defaultPerView: newVal } }\n\t\t\t\t\t\t\t\t\t\t\t: { slideInfo: { ...slideInfo, mobilePerView: newVal } },\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\twithInputField={true}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{(slideInfo.effect === \"none\" ||\n\t\t\t\t\t\t\tslideInfo.effect === \"coverflow\" ||\n\t\t\t\t\t\t\tslideInfo.effect === \"coverflow_2\") && (\n\t\t\t\t\t\t\t<RangeControl\n\t\t\t\t\t\t\t\tlabel={\n\t\t\t\t\t\t\t\t\t!isMobile\n\t\t\t\t\t\t\t\t\t\t? __(\"Slide Space Between(desk top)\", \"slide-blocks\")\n\t\t\t\t\t\t\t\t\t\t: __(\"Slide Space Between(mobile)\", \"slide-blocks\")\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tvalue={\n\t\t\t\t\t\t\t\t\t!isMobile ? slideInfo.defaultBetween : slideInfo.mobileBetween\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tmax={200}\n\t\t\t\t\t\t\t\tmin={0}\n\t\t\t\t\t\t\t\tstep={5}\n\t\t\t\t\t\t\t\tonChange={(newVal) =>\n\t\t\t\t\t\t\t\t\tsetAttributes(\n\t\t\t\t\t\t\t\t\t\t!isMobile\n\t\t\t\t\t\t\t\t\t\t\t? { slideInfo: { ...slideInfo, defaultBetween: newVal } }\n\t\t\t\t\t\t\t\t\t\t\t: { slideInfo: { ...slideInfo, mobileBetween: newVal } },\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\twithInputField={true}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{slideInfo.effect === \"none\" && (\n\t\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\t\tlabel={__(\"Active Slide Center\", \"slide-blocks\")}\n\t\t\t\t\t\t\t\tchecked={slideInfo.isActiveCenter}\n\t\t\t\t\t\t\t\tonChange={(newVal) => {\n\t\t\t\t\t\t\t\t\tsetAttributes({\n\t\t\t\t\t\t\t\t\t\tslideInfo: { ...slideInfo, isActiveCenter: newVal },\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{slideInfo.effect === \"slide_single_view\" && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<div className=\"itmar_title_type\">\n\t\t\t\t\t\t\t\t\t<RadioControl\n\t\t\t\t\t\t\t\t\t\tlabel={__(\"Slide Direction\", \"slide-blocks\")}\n\t\t\t\t\t\t\t\t\t\tselected={slideInfo.singleDirection}\n\t\t\t\t\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tlabel: __(\"Horizontal\", \"slide-blocks\"),\n\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"horizontal\",\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tlabel: __(\"Vertical\", \"slide-blocks\"),\n\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"vertical\",\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t\tonChange={(newVal) => {\n\t\t\t\t\t\t\t\t\t\t\tsetAttributes({\n\t\t\t\t\t\t\t\t\t\t\t\tslideInfo: { ...slideInfo, singleDirection: newVal },\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\t\t\tlabel={__(\"Parallax Slide\", \"slide-blocks\")}\n\t\t\t\t\t\t\t\t\tchecked={parallax_obj != null}\n\t\t\t\t\t\t\t\t\tonChange={(newVal) => {\n\t\t\t\t\t\t\t\t\t\tif (newVal) {\n\t\t\t\t\t\t\t\t\t\t\tsetAttributes({\n\t\t\t\t\t\t\t\t\t\t\t\tparallax_obj: {\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tslideInfo.singleDirection === \"horizontal\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? \"x\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \"y\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tscale: 50,\n\t\t\t\t\t\t\t\t\t\t\t\t\tunit: \"%\",\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tsetAttributes({ parallax_obj: null });\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{slideInfo.effect === \"slide_single_view\" &&\n\t\t\t\t\t\t\tparallax_obj != null && (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<RangeControl\n\t\t\t\t\t\t\t\t\t\tlabel={__(\"Parallax Area(%)\", \"slide-blocks\")}\n\t\t\t\t\t\t\t\t\t\tvalue={parallax_obj?.scale ? parallax_obj.scale : 0}\n\t\t\t\t\t\t\t\t\t\tmax={100}\n\t\t\t\t\t\t\t\t\t\tmin={0}\n\t\t\t\t\t\t\t\t\t\tstep={10}\n\t\t\t\t\t\t\t\t\t\tonChange={(newVal) =>\n\t\t\t\t\t\t\t\t\t\t\tsetAttributes({\n\t\t\t\t\t\t\t\t\t\t\t\tparallax_obj: {\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tslideInfo.singleDirection === \"horizontal\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? \"x\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \"y\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tscale: newVal,\n\t\t\t\t\t\t\t\t\t\t\t\t\tunit: \"%\",\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\twithInputField={true}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t{slideInfo.effect === \"fade_single_view\" && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<div className=\"itmar_title_type\">\n\t\t\t\t\t\t\t\t\t<RadioControl\n\t\t\t\t\t\t\t\t\t\tlabel={__(\"Fade Motion\", \"slide-blocks\")}\n\t\t\t\t\t\t\t\t\t\tselected={slideInfo.fadeMotion}\n\t\t\t\t\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t\t\t\t\t{ label: __(\"None\", \"slide-blocks\"), value: \"none\" },\n\t\t\t\t\t\t\t\t\t\t\t{ label: __(\"Zoom Up\", \"slide-blocks\"), value: \"zoomUp\" },\n\t\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t\tonChange={(newVal) => {\n\t\t\t\t\t\t\t\t\t\t\tsetAttributes({\n\t\t\t\t\t\t\t\t\t\t\t\tslideInfo: { ...slideInfo, fadeMotion: newVal },\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{slideInfo.effect === \"fade_single_view\" &&\n\t\t\t\t\t\t\tslideInfo.fadeMotion === \"zoomUp\" && (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<RangeControl\n\t\t\t\t\t\t\t\t\t\tlabel={__(\"Zoom Scale\", \"slide-blocks\")}\n\t\t\t\t\t\t\t\t\t\tvalue={parallax_obj?.scale ? parallax_obj.scale : 1}\n\t\t\t\t\t\t\t\t\t\tmax={3}\n\t\t\t\t\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\t\t\t\t\tstep={0.1}\n\t\t\t\t\t\t\t\t\t\tonChange={(newVal) =>\n\t\t\t\t\t\t\t\t\t\t\tsetAttributes({\n\t\t\t\t\t\t\t\t\t\t\t\tparallax_obj: {\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: \"scale\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tscale: newVal,\n\t\t\t\t\t\t\t\t\t\t\t\t\tunit: \"\",\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\twithInputField={true}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t{(slideInfo.effect === \"none\" ||\n\t\t\t\t\t\t\tslideInfo.effect === \"slide_single_view\" ||\n\t\t\t\t\t\t\tslideInfo.effect === \"fade_single_view\") && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<RangeControl\n\t\t\t\t\t\t\t\t\tlabel={__(\"Speed\", \"slide-blocks\")}\n\t\t\t\t\t\t\t\t\tvalue={slideInfo.slideSpeed}\n\t\t\t\t\t\t\t\t\tmax={10000}\n\t\t\t\t\t\t\t\t\tmin={0}\n\t\t\t\t\t\t\t\t\tstep={100}\n\t\t\t\t\t\t\t\t\tonChange={(newVal) =>\n\t\t\t\t\t\t\t\t\t\tsetAttributes({\n\t\t\t\t\t\t\t\t\t\t\tslideInfo: { ...slideInfo, slideSpeed: newVal },\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\twithInputField={true}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{slideInfo.effect === \"cube\" && (\n\t\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\t\tlabel={__(\"Zoom Up\", \"slide-blocks\")}\n\t\t\t\t\t\t\t\tchecked={slideInfo.cubeZoom}\n\t\t\t\t\t\t\t\tonChange={(newVal) => {\n\t\t\t\t\t\t\t\t\tsetAttributes({\n\t\t\t\t\t\t\t\t\t\tslideInfo: { ...slideInfo, cubeZoom: newVal },\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</PanelBody>\n\n\t\t\t\t\t<PanelBody\n\t\t\t\t\t\ttitle={__(\"Navigation Setting\", \"slide-blocks\")}\n\t\t\t\t\t\tinitialOpen={false}\n\t\t\t\t\t>\n\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\tlabel={__(\"Display\", \"slide-blocks\")}\n\t\t\t\t\t\t\tchecked={slideInfo.navigation.disp}\n\t\t\t\t\t\t\tonChange={(newVal) => {\n\t\t\t\t\t\t\t\tsetAttributes({\n\t\t\t\t\t\t\t\t\tslideInfo: {\n\t\t\t\t\t\t\t\t\t\t...slideInfo,\n\t\t\t\t\t\t\t\t\t\tnavigation: { ...slideInfo.navigation, disp: newVal },\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{slideInfo.navigation.disp && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<div className=\"itmar_title_type\">\n\t\t\t\t\t\t\t\t\t<RadioControl\n\t\t\t\t\t\t\t\t\t\tlabel={__(\"Display Design\", \"slide-blocks\")}\n\t\t\t\t\t\t\t\t\t\tselected={slideInfo.navigation.design}\n\t\t\t\t\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tlabel: __(\"Default\", \"slide-blocks\"),\n\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"default\",\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{ label: __(\"Circle\", \"slide-blocks\"), value: \"circle\" },\n\t\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t\tonChange={(newVal) => {\n\t\t\t\t\t\t\t\t\t\t\tsetAttributes({\n\t\t\t\t\t\t\t\t\t\t\t\tslideInfo: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t...slideInfo,\n\t\t\t\t\t\t\t\t\t\t\t\t\tnavigation: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t...slideInfo.navigation,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdesign: newVal,\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<RangeControl\n\t\t\t\t\t\t\t\t\tlabel={\n\t\t\t\t\t\t\t\t\t\t!isMobile\n\t\t\t\t\t\t\t\t\t\t\t? __(\"Horizen position(desk top)\", \"slide-blocks\")\n\t\t\t\t\t\t\t\t\t\t\t: __(\"Horizen position(mobile)\", \"slide-blocks\")\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tvalue={\n\t\t\t\t\t\t\t\t\t\t!isMobile\n\t\t\t\t\t\t\t\t\t\t\t? slideInfo.navigation.defaultHorizonPos\n\t\t\t\t\t\t\t\t\t\t\t: slideInfo.navigation.mobileHorizenPos\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tmax={10}\n\t\t\t\t\t\t\t\t\tmin={-10}\n\t\t\t\t\t\t\t\t\tstep={0.5}\n\t\t\t\t\t\t\t\t\tonChange={(newVal) =>\n\t\t\t\t\t\t\t\t\t\tsetAttributes(\n\t\t\t\t\t\t\t\t\t\t\t!isMobile\n\t\t\t\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tslideInfo: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...slideInfo,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnavigation: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...slideInfo.navigation,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultHorizonPos: newVal,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tslideInfo: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...slideInfo,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnavigation: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...slideInfo.navigation,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmobileHorizenPos: newVal,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t  },\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\twithInputField={true}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<RangeControl\n\t\t\t\t\t\t\t\t\tlabel={\n\t\t\t\t\t\t\t\t\t\t!isMobile\n\t\t\t\t\t\t\t\t\t\t\t? __(\"Vertical position(desk top)\", \"slide-blocks\")\n\t\t\t\t\t\t\t\t\t\t\t: __(\"Vertical position(mobile)\", \"slide-blocks\")\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tvalue={\n\t\t\t\t\t\t\t\t\t\t!isMobile\n\t\t\t\t\t\t\t\t\t\t\t? slideInfo.navigation.defaultVertPos\n\t\t\t\t\t\t\t\t\t\t\t: slideInfo.navigation.mobileVertPos\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tmax={95}\n\t\t\t\t\t\t\t\t\tmin={5}\n\t\t\t\t\t\t\t\t\tstep={5}\n\t\t\t\t\t\t\t\t\tonChange={(newVal) =>\n\t\t\t\t\t\t\t\t\t\tsetAttributes(\n\t\t\t\t\t\t\t\t\t\t\t!isMobile\n\t\t\t\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tslideInfo: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...slideInfo,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnavigation: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...slideInfo.navigation,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultVertPos: newVal,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tslideInfo: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...slideInfo,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnavigation: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...slideInfo.navigation,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmobileVertPos: newVal,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t  },\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\twithInputField={true}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\t\t\tlabel={__(\"Hover Appear\", \"slide-blocks\")}\n\t\t\t\t\t\t\t\t\tchecked={slideInfo.navigation.hoverAppear}\n\t\t\t\t\t\t\t\t\tonChange={(newVal) => {\n\t\t\t\t\t\t\t\t\t\tsetAttributes({\n\t\t\t\t\t\t\t\t\t\t\tslideInfo: {\n\t\t\t\t\t\t\t\t\t\t\t\t...slideInfo,\n\t\t\t\t\t\t\t\t\t\t\t\tnavigation: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t...slideInfo.navigation,\n\t\t\t\t\t\t\t\t\t\t\t\t\thoverAppear: newVal,\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{slideInfo.navigation.disp &&\n\t\t\t\t\t\t\tslideInfo.navigation.design != \"default\" && (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<PanelColorGradientSettings\n\t\t\t\t\t\t\t\t\t\ttitle={__(\"Background Color Setting\", \"slide-blocks\")}\n\t\t\t\t\t\t\t\t\t\tsettings={[\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tcolorValue: slideInfo.navigation.bgColor,\n\t\t\t\t\t\t\t\t\t\t\t\tgradientValue: slideInfo.navigation.bgGradient,\n\t\t\t\t\t\t\t\t\t\t\t\tlabel: __(\"Choose Background color\", \"slide-blocks\"),\n\n\t\t\t\t\t\t\t\t\t\t\t\tonColorChange: (newValue) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetNavigationBgColor(newValue);\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\tonGradientChange: (newValue) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetNavigationBgGradient(newValue);\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\t\t\t\tlabel={__(\"Is Shadow\", \"slide-blocks\")}\n\t\t\t\t\t\t\t\t\t\tchecked={slideInfo.navigation.is_shadow}\n\t\t\t\t\t\t\t\t\t\tonChange={(newVal) => {\n\t\t\t\t\t\t\t\t\t\t\tsetAttributes({\n\t\t\t\t\t\t\t\t\t\t\t\tslideInfo: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t...slideInfo,\n\t\t\t\t\t\t\t\t\t\t\t\t\tnavigation: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t...slideInfo.navigation,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tis_shadow: newVal,\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t{slideInfo.navigation.disp &&\n\t\t\t\t\t\t\tslideInfo.navigation.design != \"default\" &&\n\t\t\t\t\t\t\tslideInfo.navigation.is_shadow && (\n\t\t\t\t\t\t\t\t<ShadowStyle\n\t\t\t\t\t\t\t\t\tshadowStyle={{ ...slideInfo.navigation.shadow_element }}\n\t\t\t\t\t\t\t\t\tonChange={(newStyle, newState) => {\n\t\t\t\t\t\t\t\t\t\tsetAttributes({\n\t\t\t\t\t\t\t\t\t\t\tslideInfo: {\n\t\t\t\t\t\t\t\t\t\t\t\t...slideInfo,\n\t\t\t\t\t\t\t\t\t\t\t\tnavigation: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t...slideInfo.navigation,\n\t\t\t\t\t\t\t\t\t\t\t\t\tshadow_element: newState,\n\t\t\t\t\t\t\t\t\t\t\t\t\tshadow_result: newStyle.style,\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t</PanelBody>\n\n\t\t\t\t\t<PanelBody\n\t\t\t\t\t\ttitle={__(\"Pagenation Setting\", \"slide-blocks\")}\n\t\t\t\t\t\tinitialOpen={false}\n\t\t\t\t\t>\n\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\tlabel={__(\"Display\", \"slide-blocks\")}\n\t\t\t\t\t\t\tchecked={slideInfo.pagination.disp}\n\t\t\t\t\t\t\tonChange={(newVal) => {\n\t\t\t\t\t\t\t\tsetAttributes({\n\t\t\t\t\t\t\t\t\tslideInfo: {\n\t\t\t\t\t\t\t\t\t\t...slideInfo,\n\t\t\t\t\t\t\t\t\t\tpagination: { ...slideInfo.pagination, disp: newVal },\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{slideInfo.pagination.disp && (\n\t\t\t\t\t\t\t<div className=\"itmar_title_type\">\n\t\t\t\t\t\t\t\t<RadioControl\n\t\t\t\t\t\t\t\t\tlabel={__(\"Design type\", \"slide-blocks\")}\n\t\t\t\t\t\t\t\t\tselected={slideInfo.pagination.design}\n\t\t\t\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t\t\t\t{ label: __(\"Default\", \"slide-blocks\"), value: \"default\" },\n\t\t\t\t\t\t\t\t\t\t{ label: __(\"Bar\", \"slide-blocks\"), value: \"bar\" },\n\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\tonChange={(newVal) => {\n\t\t\t\t\t\t\t\t\t\tsetAttributes({\n\t\t\t\t\t\t\t\t\t\t\tslideInfo: {\n\t\t\t\t\t\t\t\t\t\t\t\t...slideInfo,\n\t\t\t\t\t\t\t\t\t\t\t\tpagination: { ...slideInfo.pagination, design: newVal },\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</PanelBody>\n\t\t\t\t\t<PanelBody\n\t\t\t\t\t\ttitle={__(\"ScrollBar Setting\", \"slide-blocks\")}\n\t\t\t\t\t\tinitialOpen={false}\n\t\t\t\t\t>\n\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\tlabel={__(\"Display\", \"slide-blocks\")}\n\t\t\t\t\t\t\tchecked={slideInfo.scrollbar.disp}\n\t\t\t\t\t\t\tonChange={(newVal) => {\n\t\t\t\t\t\t\t\tsetAttributes({\n\t\t\t\t\t\t\t\t\tslideInfo: {\n\t\t\t\t\t\t\t\t\t\t...slideInfo,\n\t\t\t\t\t\t\t\t\t\tscrollbar: { ...slideInfo.scrollbar, disp: newVal },\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</PanelBody>\n\t\t\t\t</PanelBody>\n\t\t\t</InspectorControls>\n\n\t\t\t<InspectorControls group=\"styles\">\n\t\t\t\t<PanelBody\n\t\t\t\t\ttitle={__(\"Content Style\", \"slide-blocks\")}\n\t\t\t\t\tinitialOpen={true}\n\t\t\t\t\tclassName=\"form_design_ctrl\"\n\t\t\t\t>\n\t\t\t\t\t<RangeControl\n\t\t\t\t\t\tlabel={\n\t\t\t\t\t\t\t!isMobile\n\t\t\t\t\t\t\t\t? __(\"Width settings(vw)(desk top)\", \"slide-blocks\")\n\t\t\t\t\t\t\t\t: __(\"Width settings(vw)(mobile)\", \"slide-blocks\")\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvalue={!isMobile ? default_val.width : mobile_val.width}\n\t\t\t\t\t\tmax={100}\n\t\t\t\t\t\tmin={30}\n\t\t\t\t\t\tstep={1}\n\t\t\t\t\t\tonChange={(value) =>\n\t\t\t\t\t\t\tsetAttributes(\n\t\t\t\t\t\t\t\t!isMobile\n\t\t\t\t\t\t\t\t\t? { default_val: { ...default_val, width: value } }\n\t\t\t\t\t\t\t\t\t: { mobile_val: { ...mobile_val, width: value } },\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t\twithInputField={true}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<RangeControl\n\t\t\t\t\t\tlabel={\n\t\t\t\t\t\t\t!isMobile\n\t\t\t\t\t\t\t\t? __(\"Height settings(vh)(desk top)\", \"slide-blocks\")\n\t\t\t\t\t\t\t\t: __(\"Height settings(vh)(mobile)\", \"slide-blocks\")\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvalue={!isMobile ? default_val.height : mobile_val.height}\n\t\t\t\t\t\tmax={100}\n\t\t\t\t\t\tmin={10}\n\t\t\t\t\t\tstep={1}\n\t\t\t\t\t\tonChange={(value) =>\n\t\t\t\t\t\t\tsetAttributes(\n\t\t\t\t\t\t\t\t!isMobile\n\t\t\t\t\t\t\t\t\t? { default_val: { ...default_val, height: value } }\n\t\t\t\t\t\t\t\t\t: { mobile_val: { ...mobile_val, height: value } },\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t\twithInputField={true}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<BoxControl\n\t\t\t\t\t\tlabel={\n\t\t\t\t\t\t\t!isMobile\n\t\t\t\t\t\t\t\t? __(\"Padding settings(desk top)\", \"slide-blocks\")\n\t\t\t\t\t\t\t\t: __(\"Padding settings(mobile)\", \"slide-blocks\")\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvalues={\n\t\t\t\t\t\t\t!isMobile\n\t\t\t\t\t\t\t\t? default_val.padding_content\n\t\t\t\t\t\t\t\t: mobile_val.padding_content\n\t\t\t\t\t\t}\n\t\t\t\t\t\tonChange={(value) =>\n\t\t\t\t\t\t\tsetAttributes(\n\t\t\t\t\t\t\t\t!isMobile\n\t\t\t\t\t\t\t\t\t? { default_val: { ...default_val, padding_content: value } }\n\t\t\t\t\t\t\t\t\t: { mobile_val: { ...mobile_val, padding_content: value } },\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tunits={units} // 許可する単位\n\t\t\t\t\t\tallowReset={true} // リセットの可否\n\t\t\t\t\t\tresetValues={\n\t\t\t\t\t\t\t!isMobile ? padding_resetValues : padding_mobile_resetValues\n\t\t\t\t\t\t} // リセット時の値\n\t\t\t\t\t/>\n\n\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\tlabel={__(\"Is Shadow\", \"slide-blocks\")}\n\t\t\t\t\t\tchecked={is_shadow}\n\t\t\t\t\t\tonChange={(newVal) => {\n\t\t\t\t\t\t\tsetAttributes({ is_shadow: newVal });\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t{is_shadow && (\n\t\t\t\t\t\t<ShadowStyle\n\t\t\t\t\t\t\tshadowStyle={{ ...shadow_element }}\n\t\t\t\t\t\t\tonChange={(newStyle, newState) => {\n\t\t\t\t\t\t\t\tsetAttributes({ shadow_result: newStyle.style });\n\t\t\t\t\t\t\t\tsetAttributes({ shadow_element: newState });\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</PanelBody>\n\t\t\t\t<PanelBody\n\t\t\t\t\ttitle={\n\t\t\t\t\t\t!isMobile\n\t\t\t\t\t\t\t? __(\"Position moveable(desk top)\", \"slide-blocks\")\n\t\t\t\t\t\t\t: __(\"Position moveable(mobile)\", \"slide-blocks\")\n\t\t\t\t\t}\n\t\t\t\t\tinitialOpen={true}\n\t\t\t\t>\n\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\tlabel={__(\"make it moveable\", \"slide-blocks\")}\n\t\t\t\t\t\tchecked={\n\t\t\t\t\t\t\t!isMobile ? default_val.is_moveable : mobile_val.is_moveable\n\t\t\t\t\t\t}\n\t\t\t\t\t\tonChange={(value) => {\n\t\t\t\t\t\t\tsetAttributes(\n\t\t\t\t\t\t\t\t!isMobile\n\t\t\t\t\t\t\t\t\t? { default_val: { ...default_val, is_moveable: value } }\n\t\t\t\t\t\t\t\t\t: { mobile_val: { ...mobile_val, is_moveable: value } },\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t{(!isMobile ? default_val.is_moveable : mobile_val.is_moveable) && (\n\t\t\t\t\t\t<DraggableBox\n\t\t\t\t\t\t\tattributes={\n\t\t\t\t\t\t\t\t!isMobile ? default_val.position : mobile_val.position\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tonPositionChange={(pos) =>\n\t\t\t\t\t\t\t\tsetAttributes(\n\t\t\t\t\t\t\t\t\t!isMobile\n\t\t\t\t\t\t\t\t\t\t? { default_val: { ...default_val, position: pos } }\n\t\t\t\t\t\t\t\t\t\t: { mobile_val: { ...mobile_val, position: pos } },\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</PanelBody>\n\t\t\t</InspectorControls>\n\n\t\t\t<BlockControls>\n\t\t\t\t<ToolbarDropdownMenu\n\t\t\t\t\tlabel={__(\"Lateral Position\", \"slide-blocks\")}\n\t\t\t\t\ticon={\n\t\t\t\t\t\t(!isMobile ? default_val.lat_pos : mobile_val.lat_pos)\n\t\t\t\t\t\t\t? alignIconMap[\n\t\t\t\t\t\t\t\t\t!isMobile ? default_val.lat_pos : mobile_val.lat_pos\n\t\t\t\t\t\t\t  ]\n\t\t\t\t\t\t\t: alignIconMap[\"center\"]\n\t\t\t\t\t}\n\t\t\t\t\tcontrols={[\"left\", \"center\", \"right\"].map((align) => ({\n\t\t\t\t\t\ticon: alignIconMap[align],\n\t\t\t\t\t\tisActive:\n\t\t\t\t\t\t\t(!isMobile ? default_val.lat_pos : mobile_val.lat_pos) === align,\n\t\t\t\t\t\tonClick: () =>\n\t\t\t\t\t\t\tsetAttributes(\n\t\t\t\t\t\t\t\t!isMobile\n\t\t\t\t\t\t\t\t\t? { default_val: { ...default_val, lat_pos: align } }\n\t\t\t\t\t\t\t\t\t: { mobile_val: { ...mobile_val, lat_pos: align } },\n\t\t\t\t\t\t\t),\n\t\t\t\t\t}))}\n\t\t\t\t/>\n\t\t\t</BlockControls>\n\n\t\t\t<StyleComp attributes={attributes} isFront={false}>\n\t\t\t\t<div {...blockProps}>\n\t\t\t\t\t<div className=\"swiper\" ref={swiperRef}>\n\t\t\t\t\t\t<div {...innerBlocksProps}></div>\n\t\t\t\t\t</div>\n\t\t\t\t\t{/* <!-- ナビゲーションボタンの表示 --> */}\n\t\t\t\t\t<div class={`swiper-button-prev ${swiper_id}-prev`}></div>\n\t\t\t\t\t<div class={`swiper-button-next ${swiper_id}-next`}></div>\n\t\t\t\t\t{/* <!-- ページネーションの表示 --> */}\n\t\t\t\t\t<div class={`swiper-pagination ${swiper_id}-pagination`}></div>\n\t\t\t\t\t{/* <!-- スクロールバーの表示 --> */}\n\t\t\t\t\t<div class={`swiper-scrollbar ${swiper_id}-scrollbar`}></div>\n\t\t\t\t</div>\n\t\t\t</StyleComp>\n\t\t</>\n\t);\n}\n"],"names":["useElementBackgroundColor","blockRef","style","baseColor","setBaseColor","useState","useEffect","current","backgroundColor","startsWith","computedStyles","getComputedStyle","useIsIframeMobile","isMobile","setIsMobile","checkIframeSize","iframeInstance","document","getElementsByName","contentWindow","innerWidth","addEventListener","removeEventListener","useDeepCompareEffect","callback","dependencies","dependenciesRef","useRef","isEqual","useDraggingMove","isMovable","position","onPositionChange","elmposition","x","y","isDragging","mousePosition","element","classList","remove","pos_value_x","match","pos_value_y","parseInt","handleMouseDown","event","add","clientX","clientY","handleMouseMove","dx","dy","newPosition","transform","handleMouseUp","handleMouseLeave","DraggableBox","props","attributes","chagePosition","value","cordinate","newPos","createElement","Fragment","PanelBody","title","__","initialOpen","PanelRow","className","UnitControl","dragDirection","onChange","label","Button","variant","onClick","DEFAULT_STATE","displayedNotices","swiperInstances","store","createReduxStore","reducer","state","action","type","noticeId","instance","filter","inst","swiper_id","instanceId","actions","addNotice","resetNotices","addSwiperInstance","removeSwiperInstance","selectors","hasNoticeBeenDisplayed","includes","getSwiperInstances","getSwiperInstanceById","find","register","useStyleIframe","StyleComp","iframeDocument","contentDocument","sheet","ServerStyleSheet","renderToString","collectStyles","styleContent","getStyleTags","replace","iframeStyleTag","innerHTML","head","appendChild","removeChild","padding_resetValues","top","left","right","bottom","padding_mobile_resetValues","border_resetValues","units","alignIconMap","justifyLeft","center","justifyCenter","justifyRight","effectModule","fade_single_view","EffectFade","coverflow","EffectCoverflow","coverflow_2","cube","EffectCube","flip","EffectFlip","cards","EffectCards","parallax","Parallax","thumbs","Thumbs","findAllBlocksOfType","blocks","blockType","foundBlocks","forEach","block","name","push","innerBlocks","length","Edit","setAttributes","clientId","relate_id","is_thumbnail","default_val","mobile_val","is_shadow","slideInfo","parallax_obj","shadow_element","blockProps","useBlockProps","ref","new_shadow","ShadowElm","shadow_result","is_moveable","innerBlocksProps","useInnerBlocksProps","template","allowedBlocks","templateLock","effect","singleDirection","scale","fadeMotion","unit","useSelect","select","getBlocks","updateBlockAttributes","useDispatch","innerBlock","swiper_flg","is_swiper","parallax_prm","imageBlocks","imageBlock","editorBlocks","createNotice","relateIDs","setRelateIDs","otherSwiperIds","map","id","some","item","parallax_option","effectOption","none","centeredSlides","isActiveCenter","speed","slideSpeed","slidesPerView","mobilePerView","defaultPerView","spaceBetween","mobileBetween","defaultBetween","slide_single_view","direction","loopAdditionalSlides","allowTouchMove","fadeEffect","crossFade","coverflowEffect","rotate","depth","stretch","modifier","slideShadows","slideToClickedSlide","cubeEffect","shadow","shadowOffset","shadowScale","on","slideChangeTransitionStart","this","el","slideChangeTransitionEnd","flipEffect","limitRotation","cardsEffect","perSlideOffset","perSlideRotate","swiperRef","swiperInstance","storeObj","setStoreObj","parentElement","querySelectorAll","bullet","destroy","slide","firstDiv","querySelector","removeAttribute","div","createSwiperObj","moduleArray","swiperOptions","simulateTouch","loop","watchSlidesProgress","watchSlidesVisibility","navigation","disp","Navigation","nextButton","prevButton","nextEl","prevEl","pagination","Pagination","scrollbar","Scrollbar","modules","Swiper","relateObj","swiper","init","update","slider","slideToLoop","realIndex","undefined","navigationBgColor","setNavigationBgColor","bgColor","navigationBgGradient","setNavigationBgGradient","bgGradient","base_color","InspectorControls","group","TextControl","ComboboxControl","options","newValue","ToggleControl","checked","newVal","RangeControl","activeSlideEffect","blur","max","min","step","_slideInfo$activeSlid","withInputField","opacity","_slideInfo$activeSlid2","zoom","_slideInfo$activeSlid3","blend","_slideInfo$activeSlid4","BorderBoxControl","_slideInfo$activeSlid5","border","allowReset","resetValues","is_autoplay","autoplay","help","RadioControl","selected","cubeZoom","design","mobileHorizenPos","defaultHorizonPos","mobileVertPos","defaultVertPos","hoverAppear","PanelColorGradientSettings","settings","colorValue","gradientValue","onColorChange","onGradientChange","ShadowStyle","shadowStyle","newStyle","newState","width","height","BoxControl","values","padding_content","pos","BlockControls","ToolbarDropdownMenu","icon","lat_pos","controls","align","isActive","isFront","class"],"sourceRoot":""}