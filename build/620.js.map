{"version":3,"file":"620.js","mappings":"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","sources":["webpack://slide-blocks/./src/blocks/CustomFooks.js","webpack://slide-blocks/./src/blocks/DraggableBox.js","webpack://slide-blocks/./src/blocks/iframeFooks.js","webpack://slide-blocks/./src/blocks/slide-mv/edit.js"],"sourcesContent":["import { useRef, useEffect, useState } from '@wordpress/element';\r\nimport isEqual from 'lodash/isEqual';\r\n\r\n//useRefで参照したDOM要素の大きさを取得するカスタムフック\r\nexport function useElementWidth() {\r\n  const ref = useRef(null);\r\n  const [width, setWidth] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const resizeObserver = new ResizeObserver(entries => {\r\n      for (let entry of entries) {\r\n        setWidth(entry.contentRect.width);\r\n      }\r\n    });\r\n\r\n    if (ref.current) {\r\n      resizeObserver.observe(ref.current);\r\n    }\r\n\r\n    return () => {\r\n      resizeObserver.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  return [ref, width];\r\n}\r\n\r\n//ブロックの背景色を取得するカスタムフック\r\nexport function useElementBackgroundColor(blockRef, style) {\r\n  const [baseColor, setBaseColor] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (blockRef.current && style) {\r\n      if (style.backgroundColor && !style.backgroundColor.startsWith(\"var(--wp\")) {//backgroundColorが設定されており、それがカスタムプロパティでない\r\n        setBaseColor(style.backgroundColor);\r\n      } else {//レンダリング結果から背景色を取得\r\n        if (blockRef.current) {\r\n          const computedStyles = getComputedStyle(blockRef.current);\r\n          setBaseColor(computedStyles.backgroundColor);\r\n        }\r\n      }\r\n    }\r\n\r\n  }, [style, blockRef]);\r\n\r\n  return baseColor;\r\n}\r\n\r\n//ViewPortの大きさでモバイルを判断(767px以下がモバイル)するカスタムフック\r\nexport function useIsMobile() {\r\n  const [isMobile, setIsMobile] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (typeof window !== 'undefined') {\r\n      const handleResize = () => {\r\n        setIsMobile(window.innerWidth <= 767);\r\n      };\r\n\r\n      window.addEventListener('resize', handleResize);\r\n\r\n      return () => {\r\n        window.removeEventListener('resize', handleResize);\r\n      };\r\n    }\r\n  }, []);\r\n\r\n  return isMobile;\r\n};\r\n\r\nexport function useIsIframeMobile() {\r\n  const [isMobile, setIsMobile] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // iframeのcontentWindowを監視する関数\r\n    const checkIframeSize = () => {\r\n      const iframeInstance = document.getElementsByName('editor-canvas')[0];\r\n      if (iframeInstance && iframeInstance.contentWindow) {\r\n        setIsMobile(iframeInstance.contentWindow.innerWidth <= 767);\r\n      }\r\n    };\r\n\r\n    // iframeのcontentWindowのリサイズイベントにリスナーを追加\r\n    const iframeInstance = document.getElementsByName('editor-canvas')[0];\r\n    if (iframeInstance && iframeInstance.contentWindow) {\r\n      iframeInstance.contentWindow.addEventListener('resize', checkIframeSize);\r\n    }\r\n\r\n    // 初期チェックを実行\r\n    checkIframeSize();\r\n\r\n    // クリーンアップ関数\r\n    return () => {\r\n      if (iframeInstance && iframeInstance.contentWindow) {\r\n        iframeInstance.contentWindow.removeEventListener('resize', checkIframeSize);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return isMobile;\r\n}\r\n\r\n\r\n//たくさんの要素をもつオブジェクトや配列の内容の変化で発火するuseEffect\r\nexport function useDeepCompareEffect(callback, dependencies) {\r\n  const dependenciesRef = useRef();\r\n\r\n  if (!isEqual(dependencies, dependenciesRef.current)) {\r\n    dependenciesRef.current = dependencies;\r\n  }\r\n\r\n  useEffect(() => {\r\n    return callback();\r\n  }, [dependenciesRef.current]);\r\n}\r\n","import { useEffect, useRef } from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\n\nimport {\n  Button,\n  PanelBody,\n  PanelRow,\n  __experimentalUnitControl as UnitControl\n} from '@wordpress/components';\n\nexport const useDraggingMove = (isMovable, blockRef, position, onPositionChange) => {\n  const elmposition = useRef({ x: 0, y: 0 });\n  const isDragging = useRef(false);\n  const mousePosition = useRef({ x: 0, y: 0 });\n\n  useEffect(() => {\n    const element = blockRef.current;\n\n    if (!isMovable) {\n      if (element) {\n        element.classList.remove('itmar_isDraggable');//移動カーソル表示クラス削除\n      }\n      return; // 移動許可がある場合のみ、後続のロジックを実行\n    }\n    //positionの変化に合わせて現在位置を変更\n    const pos_value_x = position.x.match(/(-?\\d+)([a-zA-Z]+)/);\n    const pos_value_y = position.y.match(/(-?\\d+)([a-zA-Z]+)/);\n    elmposition.current = { x: parseInt(pos_value_x[1]), y: parseInt(pos_value_y[1]) }\n\n    //イベントハンドラ\n    const handleMouseDown = (event) => {\n      // 移動カーソル表示クラス名を追加します。\n      element.classList.add('itmar_isDraggable');\n      //ドラッグの開始フラグオン\n      isDragging.current = true;\n      //ドラッグ開始の絶対位置\n      mousePosition.current = { x: event.clientX, y: event.clientY };\n    };\n\n    const handleMouseMove = (event) => {\n      if (!isDragging.current) return;//ドラッグ中でなければ処理を中止\n      const dx = event.clientX - mousePosition.current.x;\n      const dy = event.clientY - mousePosition.current.y;\n      //ドラッグ後の位置を保存\n      const newPosition = {\n        x: elmposition.current.x + dx,\n        y: elmposition.current.y + dy,\n      };\n      elmposition.current = newPosition;\n      mousePosition.current = { x: event.clientX, y: event.clientY };//マウス位置の保存\n      //ドラッグによるブロックの一時的移動\n      element.style.transform = `translate(${elmposition.current.x}px, ${elmposition.current.y}px)`;\n    };\n\n    const handleMouseUp = () => {\n      isDragging.current = false;\n      element.style.transform = null;\n      //呼出しもとに要素の位置を返す\n      onPositionChange({ x: `${elmposition.current.x}px`, y: `${elmposition.current.y}px` });\n    };\n    const handleMouseLeave = () => {\n      isDragging.current = false;\n    };\n\n    if (element) {\n      // クラス名を追加します。\n      element.classList.add('itmar_isDraggable');\n    }\n    // イベントハンドラを追加します。\n    element.addEventListener('mousedown', handleMouseDown);\n    element.addEventListener('mousemove', handleMouseMove);\n    element.addEventListener('mouseup', handleMouseUp);\n    element.addEventListener('mouseleave', handleMouseLeave);\n\n    // イベントリスナーを削除するクリーンアップ関数を返します。\n    return () => {\n      element.removeEventListener('mousedown', handleMouseDown);\n      element.removeEventListener('mousemove', handleMouseMove);\n      element.removeEventListener('mouseup', handleMouseUp);\n      element.removeEventListener('mouseleave', handleMouseLeave);\n      element.style.transform = null;\n    };\n  }, [isMovable, blockRef, position, onPositionChange]); // 依存配列に isMovable を含めます\n}\n\nexport default function DraggableBox(props) {\n\n  const position = props.attributes\n\n  //インスペクター内のコントロールからの移動操作\n  const chagePosition = (value, cordinate) => {\n    if (value) {\n      const newPos = { ...position, [cordinate]: value };\n      props.onPositionChange(newPos);\n    }\n  }\n\n  //リセット\n  const resetPos = () => {\n    const newPos = { \"x\": \"0px\", \"y\": \"0px\" };\n    props.onPositionChange(newPos);\n  }\n\n  return (\n    <>\n      <PanelBody\n        title={__(\"Position Setting\", 'itmar_block_collections')}\n        initialOpen={true}\n      >\n        <PanelRow\n          className='distance_row'\n        >\n          <UnitControl\n            dragDirection=\"e\"\n            onChange={(value) => chagePosition(value, 'x')}\n            label={__(\"Lateral direction\", 'itmar_block_collections')}\n            value={position?.x || 0}\n          />\n          <UnitControl\n            dragDirection=\"e\"\n            onChange={(value) => chagePosition(value, 'y')}\n            label={__(\"Longitudinal direction\", 'itmar_block_collections')}\n            value={position?.y || 0}\n          />\n        </PanelRow>\n        <PanelRow\n          className='reset_row'\n        >\n          <Button\n            variant=\"secondary\"\n            onClick={() => resetPos()}\n          >\n            {__(\"Reset\", 'itmar_block_collections')}\n          </Button>\n        </PanelRow>\n      </PanelBody>\n    </>\n  )\n}","import { useEffect } from '@wordpress/element';\r\nimport { useDeepCompareEffect } from './CustomFooks';\r\nimport { ServerStyleSheet } from 'styled-components';\r\nimport { renderToString } from 'react-dom/server';\r\n\r\n\r\nexport function useStyleIframe(StyleComp, attributes) {\r\n  //サイトエディタの場合はiframeにスタイルをわたす。\r\n  useDeepCompareEffect(() => {\r\n    const iframeInstance = document.getElementsByName('editor-canvas')[0];\r\n\r\n    if (iframeInstance) {\r\n      const iframeDocument = iframeInstance.contentDocument || iframeInstance.contentWindow.document;\r\n      const sheet = new ServerStyleSheet();\r\n      renderToString(sheet.collectStyles(<StyleComp attributes={attributes} />));\r\n      const styleTags = sheet.getStyleTags();\r\n      const styleContent = styleTags.replace(/<style[^>]*>|<\\/style>/g, '');\r\n\r\n      const iframeStyleTag = iframeDocument.createElement('style');\r\n      iframeStyleTag.innerHTML = styleContent;\r\n\r\n      // Append the new style tag to the iframe's document head\r\n      iframeDocument.head.appendChild(iframeStyleTag);\r\n      // Return a cleanup function to remove the style tag\r\n      return () => {\r\n        iframeDocument.head.removeChild(iframeStyleTag);\r\n      };\r\n    }\r\n  }, [attributes]);\r\n}\r\n\r\nexport function useFontawesomeIframe() {\r\n  //iframeにfontawesomeを読み込む\r\n  useEffect(() => {\r\n    const iframeInstance = document.getElementsByName('editor-canvas')[0];\r\n\r\n    if (iframeInstance) {\r\n      const iframeDocument = iframeInstance.contentDocument || iframeInstance.contentWindow.document;\r\n      const scriptElement = iframeDocument.createElement(\"script\");\r\n      scriptElement.setAttribute(\"src\", \"../../../assets/fontawesome.js\");\r\n      //scriptElement.setAttribute(\"crossorigin\", \"anonymous\");\r\n\r\n      iframeDocument.body.appendChild(scriptElement);\r\n\r\n      // Return a cleanup function to remove the script tag\r\n      return () => {\r\n        iframeDocument.body?.removeChild(scriptElement);\r\n      };\r\n    }\r\n  }, []);\r\n}\r\n\r\n","\nimport { __ } from '@wordpress/i18n';\nimport { StyleComp } from './StyleSlide';\nimport { useStyleIframe } from '../iframeFooks';\nimport ShadowStyle, { ShadowElm } from '../ShadowStyle';\nimport { useElementBackgroundColor, useIsIframeMobile } from '../CustomFooks';\nimport {\n\tuseBlockProps,\n\tuseInnerBlocksProps,\n\tInspectorControls,\n\tBlockControls,\n\t__experimentalPanelColorGradientSettings as PanelColorGradientSettings,\n\t__experimentalBorderRadiusControl as BorderRadiusControl\n} from '@wordpress/block-editor';\nimport {\n\tPanelBody,\n\tPanelRow,\n\tToggleControl,\n\tRangeControl,\n\tRadioControl,\n\tTextareaControl,\n\tNotice,\n\tTextControl,\n\tToolbarDropdownMenu,\n\t__experimentalBoxControl as BoxControl\n} from '@wordpress/components';\n\nimport './editor.scss';\nimport Swiper from 'swiper';\nimport { Navigation, Pagination, Scrollbar, EffectCards, EffectCoverflow, EffectCreative, EffectCube, EffectFade, EffectFlip } from 'swiper/modules';\nimport 'swiper/swiper-bundle.css';\nimport { useState, useRef, useEffect } from '@wordpress/element';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport DraggableBox, { useDraggingMove } from '../DraggableBox';\nimport { justifyCenter, justifyLeft, justifyRight } from '@wordpress/icons';\n\n//スペースのリセットバリュー\nconst padding_resetValues = {\n\ttop: '10px',\n\tleft: '10px',\n\tright: '10px',\n\tbottom: '10px',\n}\n\nconst padding_mobile_resetValues = {\n\ttop: '20px',\n\tleft: '10px',\n\tright: '10px',\n\tbottom: '20px',\n}\n\n//ボーダーのリセットバリュー\nconst border_resetValues = {\n\ttop: '0px',\n\tleft: '0px',\n\tright: '0px',\n\tbottom: '0px',\n}\n\nconst units = [\n\t{ value: 'px', label: 'px' },\n\t{ value: 'em', label: 'em' },\n\t{ value: 'rem', label: 'rem' },\n];\n\n// アイコンと文字列キーのマッピングを作成\nconst alignIconMap = {\n\tleft: justifyLeft,\n\tcenter: justifyCenter,\n\tright: justifyRight\n};\n\n\n\n//モジュールのマッピング\nconst effectModule = {\n\tcoverflow: EffectCoverflow,\n\tcoverflow_2: EffectCoverflow,\n\tcube: EffectCube,\n\tflip: EffectFlip,\n\tcards: EffectCards\n}\n\n// 再帰的にブロックを探索して特定のブロックタイプを見つける関数\nconst findAllBlocksOfType = (blocks, blockType) => {\n\tlet foundBlocks = [];\n\tblocks.forEach(block => {\n\t\tif (block.name === blockType) {\n\t\t\tfoundBlocks.push(block);\n\t\t}\n\n\t\tif (block.innerBlocks && block.innerBlocks.length) {\n\t\t\tfoundBlocks = [...foundBlocks, ...findAllBlocksOfType(block.innerBlocks, blockType)];\n\t\t}\n\t});\n\treturn foundBlocks;\n};\n\nexport default function Edit({ attributes, setAttributes, clientId }) {\n\tconst {\n\t\tdefault_val,\n\t\tmobile_val,\n\t\tis_shadow,\n\t\tslideInfo,\n\t\tshadow_element,\n\t} = attributes;\n\n\t//モバイルの判定\n\tconst isMobile = useIsIframeMobile();\n\n\t//ブロックの参照\n\tconst blockRef = useRef(null);\n\tconst blockProps = useBlockProps({\n\t\tref: blockRef,// ここで参照を blockProps に渡しています\n\t});\n\n\t//背景色の取得\n\tconst baseColor = useElementBackgroundColor(blockRef, blockProps.style);\n\n\t//背景色変更によるシャドー属性の書き換え\n\tuseEffect(() => {\n\t\tif (baseColor) {\n\t\t\tsetAttributes({ shadow_element: { ...shadow_element, baseColor: baseColor } });\n\t\t\tconst new_shadow = ShadowElm({ ...shadow_element, baseColor: baseColor });\n\t\t\tif (new_shadow) { setAttributes({ shadow_result: new_shadow.style }); }\n\t\t}\n\t}, [baseColor]);\n\n\t//サイトエディタの場合はiframeにスタイルをわたす。\n\tuseStyleIframe(StyleComp, attributes);\n\n\t//移動可能ブロックならドラッグのカスタムフックを付加\n\tconst handlePositionChange = (newPos) => {\n\t\tsetAttributes(!isMobile ?\n\t\t\t{ default_val: { ...default_val, position: newPos } }\n\t\t\t: { mobile_val: { ...mobile_val, position: newPos } })\n\t};\n\tuseDraggingMove(\n\t\t!isMobile ? default_val.is_moveable : mobile_val.is_moveable,\n\t\tblockRef,\n\t\t!isMobile ? default_val.position : mobile_val.position,\n\t\thandlePositionChange\n\t);\n\n\t//インナーブロック\n\tconst TEMPLATE = [\n\t\t['itmar/design-group', {}],\n\t];\n\tconst innerBlocksProps = useInnerBlocksProps(\n\t\t{ className: 'swiper-wrapper' },\n\t\t{\n\t\t\ttemplate: TEMPLATE,\n\t\t\tallowedBlocks: ['itmar/design-group'],\n\t\t\ttemplateLock: false\n\t\t}\n\t);\n\n\t//このブロックのitmar/design-groupのis_swiper属性はtrueにする\n\tconst innerBlocks = useSelect(select => {\n\t\treturn select('core/block-editor').getBlocks(clientId);\n\t}, [clientId]);\n\n\tconst { updateBlockAttributes } = useDispatch('core/block-editor');\n\n\tuseEffect(() => {\n\t\tinnerBlocks.forEach(innerBlock => {\n\t\t\tif (innerBlock.name === 'itmar/design-group') {\n\t\t\t\tconst newAttributes = { is_swiper: true };\n\t\t\t\tupdateBlockAttributes(innerBlock.clientId, { ...innerBlock.attributes, ...newAttributes });\n\t\t\t}\n\t\t});\n\t}, [innerBlocks.length, clientId]);\n\n\t//コアイメージを拡張するためcore/imageにitmar_ex_blockクラスをつける\n\tconst imageBlocks = findAllBlocksOfType(innerBlocks, 'core/image');\n\n\tuseEffect(() => {\n\t\timageBlocks.forEach(imageBlock => {\n\t\t\tupdateBlockAttributes(imageBlock.clientId, { ...imageBlock.attributes, className: 'itmar_ex_block' });\n\t\t});\n\t}, [innerBlocks.length, clientId]);\n\n\t//Swiperエフェクトのオプションをマッピング\n\tconst effectOption = {\n\t\tnone: {\n\t\t\tcenteredSlides: true,\n\t\t\tslidesPerView: isMobile ? slideInfo.mobilePerView : slideInfo.defaultPerView,\n\t\t\tspaceBetween: isMobile ? slideInfo.mobileBetween : slideInfo.defaultBetween,\n\t\t},\n\t\tcoverflow: {\n\t\t\tcenteredSlides: true,\n\t\t\tslidesPerView: isMobile ? slideInfo.mobilePerView : slideInfo.defaultPerView,\n\t\t\tspaceBetween: isMobile ? slideInfo.mobileBetween : slideInfo.defaultBetween,\n\t\t\teffect: \"coverflow\",\n\t\t\tcoverflowEffect: {\n\t\t\t\trotate: 50,              // (前後のスライドの回転)\n\t\t\t\tdepth: 100,             // (前後のスライドの奥行)\n\t\t\t\tstretch: isMobile ? 50 : 0, // (スライド間のスペース)\n\t\t\t\tmodifier: 1,            // (rotate・depth・stretchの値を乗算する)\n\t\t\t\tscale: 0.9,               // (前後のスライドのサイズ比率)\n\t\t\t\tslideShadows: true,    // (前後のスライド表面の影の有無)\n\t\t\t},\n\t\t},\n\t\tcoverflow_2: {\n\t\t\tcenteredSlides: true,\n\t\t\tslidesPerView: isMobile ? slideInfo.mobilePerView : slideInfo.defaultPerView,\n\t\t\tspaceBetween: isMobile ? slideInfo.mobileBetween : slideInfo.defaultBetween,\n\t\t\teffect: \"coverflow\",\n\t\t\tcoverflowEffect: {\n\t\t\t\trotate: 0,\n\t\t\t\tslideShadows: true,\n\t\t\t\tstretch: isMobile ? 150 : 100,\n\t\t\t},\n\t\t},\n\t\tcube: {\n\t\t\teffect: \"cube\",\n\t\t\tcubeEffect: {\n\t\t\t\tslideShadows: true,             // スライド表面の影の有無\n\t\t\t\tshadow: true,                   // スライド下の影の有無\n\t\t\t\tshadowOffset: 20,              // スライド下の影の位置（px）\n\t\t\t\tshadowScale: 0.94,             //スライド下の影のサイズ比率（0~1）\n\t\t\t},\n\t\t\ton: {\n\t\t\t\tslideChangeTransitionStart: function () {\n\t\t\t\t\tthis.el.classList.remove('scale-in');\n\t\t\t\t\tthis.el.classList.add('scale-out');\n\t\t\t\t},\n\t\t\t\t// トランジション終了時\n\t\t\t\tslideChangeTransitionEnd: function () {\n\t\t\t\t\tthis.el.classList.remove('scale-out');\n\t\t\t\t\tthis.el.classList.add('scale-in');\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tflip: {\n\t\t\teffect: \"flip\",\n\t\t\tflipEffect: {\n\t\t\t\tlimitRotation: true,\n\t\t\t\tslideShadows: true\n\t\t\t}\n\t\t},\n\t\tcards: {\n\t\t\teffect: \"cards\",\n\t\t\tcardsEffect: {\n\t\t\t\tperSlideOffset: 8,\n\t\t\t\tperSlideRotate: 2,\n\t\t\t\trotate: true,\n\t\t\t\tslideShadows: true\n\t\t\t}\n\t\t},\n\t}\n\n\n\t//swiperオブジェクトを参照して初期化\n\tconst swiperRef = useRef(null);\n\tconst swiperInstance = useRef(null); // Swiperインスタンスを保持するためのref\n\t//スワイパーオブジェクトの生成関数\n\tconst createSwiperObj = () => {\n\t\tconst parentElement = swiperRef.current.parentElement;\n\n\t\t//オプトインするモジュールの配列\n\t\tlet moduleArray = [];\n\n\t\t//スワイパーのオプションを生成\n\t\tlet swiperOptions = {\n\t\t\tsimulateTouch: false,\n\t\t\tloop: slideInfo.loop\n\n\t\t};\n\t\t//ナビゲーションのセット\n\t\tif (slideInfo.navigation.disp) {\n\t\t\tmoduleArray = [...moduleArray, Navigation];\n\t\t\tconst nextButton = parentElement.querySelector('.swiper-button-next');\n\t\t\tconst prevButton = parentElement.querySelector('.swiper-button-prev');\n\t\t\tswiperOptions.navigation = {\n\t\t\t\tnextEl: nextButton,\n\t\t\t\tprevEl: prevButton,\n\t\t\t};\n\t\t}\n\t\t//ページネーションのセット\n\t\tif (slideInfo.pagination.disp) {\n\t\t\tmoduleArray = [...moduleArray, Pagination];\n\t\t\tconst pagination = parentElement.querySelector('.swiper-pagination');\n\t\t\tswiperOptions.pagination = {\n\t\t\t\tel: pagination,\n\t\t\t};\n\t\t}\n\t\t//スクロールバーのセット\n\t\tif (slideInfo.scrollbar.disp) {\n\t\t\tmoduleArray = [...moduleArray, Scrollbar];\n\t\t\tconst scrollbar = parentElement.querySelector('.swiper-scrollbar');\n\t\t\tswiperOptions.scrollbar = {\n\t\t\t\tel: scrollbar,\n\t\t\t};\n\t\t}\n\t\t//エフェクトのセット\n\t\tif (slideInfo.effect) {\n\t\t\tif (effectModule[slideInfo.effect]) {\n\t\t\t\tmoduleArray = [...moduleArray, effectModule[slideInfo.effect]];\n\t\t\t}\n\t\t\tswiperOptions = { ...swiperOptions, ...effectOption[slideInfo.effect] };\n\t\t}\n\n\t\t//モジュールを追加\n\t\tswiperOptions.modules = moduleArray;\n\t\t//インスタンス初期化の実行\n\t\tswiperInstance.current = new Swiper(swiperRef.current, swiperOptions);\n\t}\n\n\t//スワイパーオブジェクト構築の実行\n\tuseEffect(() => {\n\t\tif (swiperRef.current) {\n\n\t\t\t// 既存のSwiperインスタンスがあれば破棄\n\t\t\tif (swiperInstance.current) {\n\t\t\t\t// Swiper インスタンスを破棄する前に、動的に生成された DOM 要素を削除\n\t\t\t\tconst paginationBullets = swiperRef.current.parentElement.querySelectorAll('.swiper-pagination-bullet');\n\t\t\t\tpaginationBullets.forEach(bullet => bullet.remove());\n\n\t\t\t\tswiperInstance.current.destroy(false, true);\n\t\t\t}\n\n\t\t\tcreateSwiperObj();\n\t\t}\n\n\t}, [innerBlocks.length, slideInfo, isMobile]);\n\n\n\t//ナビゲーションの色情報の更新関数\n\tconst [navigationBgColor, setNavigationBgColor] = useState(slideInfo.navigation.bgColor);\n\tconst [navigationBgGradient, setNavigationBgGradient] = useState(slideInfo.navigation.bgGradient);\n\tuseEffect(() => {\n\t\tconst base_color = !(navigationBgColor === undefined) ? navigationBgColor : 'var(--wp--preset--color--content-back)';\n\n\t\tsetAttributes({\n\t\t\tslideInfo: {\n\t\t\t\t...slideInfo,\n\t\t\t\tnavigation: {\n\t\t\t\t\t...slideInfo.navigation,\n\t\t\t\t\tbgColor: navigationBgColor === undefined ? '' : navigationBgColor,\n\t\t\t\t\tbgGradient: navigationBgGradient,\n\t\t\t\t\tshadow_element: {\n\t\t\t\t\t\t...slideInfo.navigation.shadow_element, baseColor: base_color\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}, [navigationBgColor, navigationBgGradient]);\n\n\n\treturn (\n\t\t<>\n\t\t\t<InspectorControls group=\"settings\">\n\t\t\t\t<PanelBody title={__(\"Slide Settings\", 'itmar_mv_blocks')} initialOpen={true} className=\"form_design_ctrl\">\n\t\t\t\t\t<PanelBody title={__(\"Global Setting\", 'itmar_mv_blocks')} initialOpen={false}>\n\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\tlabel={__('Loop', 'itmar_mv_blocks')}\n\t\t\t\t\t\t\tchecked={slideInfo.loop}\n\n\t\t\t\t\t\t\tonChange={(newVal) => {\n\t\t\t\t\t\t\t\tsetAttributes({ slideInfo: { ...slideInfo, loop: newVal } })\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<RangeControl\n\t\t\t\t\t\t\tvalue={slideInfo.autoplay}\n\t\t\t\t\t\t\tlabel={__(\"Autoplay\", 'itmar_mv_blocks')}\n\t\t\t\t\t\t\tmax={10000}\n\t\t\t\t\t\t\tmin={0}\n\t\t\t\t\t\t\tstep={500}\n\t\t\t\t\t\t\tonChange={(newVal) => {\n\t\t\t\t\t\t\t\tsetAttributes({ slideInfo: { ...slideInfo, autoplay: newVal } })\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\twithInputField={true}\n\t\t\t\t\t\t\thelp={__(\"It will automatically slide at the interval you entered. If set to 0, it will not slide automatically.\", 'itmar_mv_blocks')}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<div className='itmar_title_type'>\n\t\t\t\t\t\t\t<RadioControl\n\t\t\t\t\t\t\t\tlabel={__(\"Effect Type\", 'itmar_mv_blocks')}\n\t\t\t\t\t\t\t\tselected={slideInfo.effect}\n\t\t\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t\t\t{ label: __(\"None\", 'itmar_mv_blocks'), value: 'none' },\n\t\t\t\t\t\t\t\t\t{ label: __(\"Coverflow 1\", 'itmar_mv_blocks'), value: 'coverflow' },\n\t\t\t\t\t\t\t\t\t{ label: __(\"Coverflow 2\", 'itmar_mv_blocks'), value: 'coverflow_2' },\n\t\t\t\t\t\t\t\t\t{ label: __(\"Cube\", 'itmar_mv_blocks'), value: 'cube' },\n\t\t\t\t\t\t\t\t\t{ label: __(\"Flip\", 'itmar_mv_blocks'), value: 'flip' },\n\t\t\t\t\t\t\t\t\t{ label: __(\"Cards\", 'itmar_mv_blocks'), value: 'cards' },\n\n\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\tonChange={(newVal) => {\n\t\t\t\t\t\t\t\t\tsetAttributes({ slideInfo: { ...slideInfo, effect: newVal } })\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{(slideInfo.effect === 'none' || slideInfo.effect === 'coverflow' || slideInfo.effect === 'coverflow_2') &&\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<RangeControl\n\t\t\t\t\t\t\t\t\tlabel={!isMobile ?\n\t\t\t\t\t\t\t\t\t\t__(\"SlidesPerView(desk top)\", 'itmar_mv_blocks')\n\t\t\t\t\t\t\t\t\t\t: __(\"SlidesPerView(mobile)\", 'itmar_mv_blocks')}\n\t\t\t\t\t\t\t\t\tvalue={!isMobile ? slideInfo.defaultPerView : slideInfo.mobilePerView}\n\n\t\t\t\t\t\t\t\t\tmax={20}\n\t\t\t\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\t\t\t\tstep={0.1}\n\t\t\t\t\t\t\t\t\tonChange={(newVal) => setAttributes(!isMobile ?\n\t\t\t\t\t\t\t\t\t\t{ slideInfo: { ...slideInfo, defaultPerView: newVal } }\n\t\t\t\t\t\t\t\t\t\t: { slideInfo: { ...slideInfo, mobilePerView: newVal } }\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\twithInputField={true}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<RangeControl\n\t\t\t\t\t\t\t\t\tlabel={!isMobile ?\n\t\t\t\t\t\t\t\t\t\t__(\"Slide Space Between(desk top)\", 'itmar_mv_blocks')\n\t\t\t\t\t\t\t\t\t\t: __(\"Slide Space Between(mobile)\", 'itmar_mv_blocks')}\n\t\t\t\t\t\t\t\t\tvalue={!isMobile ? slideInfo.defaultBetween : slideInfo.mobileBetween}\n\n\t\t\t\t\t\t\t\t\tmax={200}\n\t\t\t\t\t\t\t\t\tmin={0}\n\t\t\t\t\t\t\t\t\tstep={5}\n\t\t\t\t\t\t\t\t\tonChange={(newVal) => setAttributes(!isMobile ?\n\t\t\t\t\t\t\t\t\t\t{ slideInfo: { ...slideInfo, defaultBetween: newVal } }\n\t\t\t\t\t\t\t\t\t\t: { slideInfo: { ...slideInfo, mobileBetween: newVal } }\n\t\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t\twithInputField={true}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{slideInfo.effect === 'cube' &&\n\t\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\t\tlabel={__('Zoom Up', 'itmar_mv_blocks')}\n\t\t\t\t\t\t\t\tchecked={slideInfo.cubeZoom}\n\n\t\t\t\t\t\t\t\tonChange={(newVal) => {\n\t\t\t\t\t\t\t\t\tsetAttributes({ slideInfo: { ...slideInfo, cubeZoom: newVal } })\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t</PanelBody>\n\n\t\t\t\t\t<PanelBody title={__(\"Navigation Setting\", 'itmar_mv_blocks')} initialOpen={false}>\n\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\tlabel={__('Display', 'itmar_mv_blocks')}\n\t\t\t\t\t\t\tchecked={slideInfo.navigation.disp}\n\t\t\t\t\t\t\tonChange={(newVal) => {\n\t\t\t\t\t\t\t\tsetAttributes({ slideInfo: { ...slideInfo, navigation: { ...slideInfo.navigation, disp: newVal } } })\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{slideInfo.navigation.disp &&\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<div className='itmar_title_type'>\n\t\t\t\t\t\t\t\t\t<RadioControl\n\t\t\t\t\t\t\t\t\t\tlabel={__(\"Display Design\", 'itmar_mv_blocks')}\n\t\t\t\t\t\t\t\t\t\tselected={slideInfo.navigation.design}\n\t\t\t\t\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t\t\t\t\t{ label: __(\"Default\", 'itmar_mv_blocks'), value: 'default' },\n\t\t\t\t\t\t\t\t\t\t\t{ label: __(\"Circle\", 'itmar_mv_blocks'), value: 'circle' },\n\t\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t\tonChange={(newVal) => {\n\t\t\t\t\t\t\t\t\t\t\tsetAttributes({ slideInfo: { ...slideInfo, navigation: { ...slideInfo.navigation, design: newVal } } })\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<RangeControl\n\t\t\t\t\t\t\t\t\tlabel={!isMobile ?\n\t\t\t\t\t\t\t\t\t\t__(\"Horizen position(desk top)\", 'itmar_mv_blocks')\n\t\t\t\t\t\t\t\t\t\t: __(\"Horizen position(mobile)\", 'itmar_mv_blocks')}\n\t\t\t\t\t\t\t\t\tvalue={!isMobile ? slideInfo.navigation.defaultHorizonPos : slideInfo.navigation.mobileHorizenPos}\n\t\t\t\t\t\t\t\t\tmax={10}\n\t\t\t\t\t\t\t\t\tmin={-10}\n\t\t\t\t\t\t\t\t\tstep={0.5}\n\t\t\t\t\t\t\t\t\tonChange={(newVal) => setAttributes(!isMobile ?\n\t\t\t\t\t\t\t\t\t\t{ slideInfo: { ...slideInfo, navigation: { ...slideInfo.navigation, defaultHorizonPos: newVal } } }\n\t\t\t\t\t\t\t\t\t\t: { slideInfo: { ...slideInfo, navigation: { ...slideInfo.navigation, mobileHorizenPos: newVal } } }\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\twithInputField={true}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<RangeControl\n\t\t\t\t\t\t\t\t\tlabel={!isMobile ?\n\t\t\t\t\t\t\t\t\t\t__(\"Vertical position(desk top)\", 'itmar_mv_blocks')\n\t\t\t\t\t\t\t\t\t\t: __(\"Vertical position(mobile)\", 'itmar_mv_blocks')}\n\t\t\t\t\t\t\t\t\tvalue={!isMobile ? slideInfo.navigation.defaultVertPos : slideInfo.navigation.mobileVertPos}\n\t\t\t\t\t\t\t\t\tmax={95}\n\t\t\t\t\t\t\t\t\tmin={5}\n\t\t\t\t\t\t\t\t\tstep={5}\n\t\t\t\t\t\t\t\t\tonChange={(newVal) => setAttributes(!isMobile ?\n\t\t\t\t\t\t\t\t\t\t{ slideInfo: { ...slideInfo, navigation: { ...slideInfo.navigation, defaultVertPos: newVal } } }\n\t\t\t\t\t\t\t\t\t\t: { slideInfo: { ...slideInfo, navigation: { ...slideInfo.navigation, mobileVertPos: newVal } } }\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\twithInputField={true}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\t\t\tlabel={__('Hover Appear', 'itmar_mv_blocks')}\n\t\t\t\t\t\t\t\t\tchecked={slideInfo.navigation.hoverAppear}\n\t\t\t\t\t\t\t\t\tonChange={(newVal) => {\n\t\t\t\t\t\t\t\t\t\tsetAttributes({ slideInfo: { ...slideInfo, navigation: { ...slideInfo.navigation, hoverAppear: newVal } } })\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{(slideInfo.navigation.disp && slideInfo.navigation.design != 'default') &&\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<PanelColorGradientSettings\n\t\t\t\t\t\t\t\t\ttitle={__(\"Background Color Setting\", 'itmar_mv_blocks')}\n\t\t\t\t\t\t\t\t\tsettings={[\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tcolorValue: slideInfo.navigation.bgColor,\n\t\t\t\t\t\t\t\t\t\t\tgradientValue: slideInfo.navigation.bgGradient,\n\t\t\t\t\t\t\t\t\t\t\tlabel: __(\"Choose Background color\", 'itmar_mv_blocks'),\n\n\t\t\t\t\t\t\t\t\t\t\tonColorChange: (newValue) => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetNavigationBgColor(newValue);\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\tonGradientChange: (newValue) => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetNavigationBgGradient(newValue);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\t\t\tlabel={__('Is Shadow', 'itmar_mv_blocks')}\n\t\t\t\t\t\t\t\t\tchecked={slideInfo.navigation.is_shadow}\n\t\t\t\t\t\t\t\t\tonChange={(newVal) => {\n\t\t\t\t\t\t\t\t\t\tsetAttributes({ slideInfo: { ...slideInfo, navigation: { ...slideInfo.navigation, is_shadow: newVal } } })\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{(slideInfo.navigation.disp && slideInfo.navigation.design != 'default' && slideInfo.navigation.is_shadow) &&\n\t\t\t\t\t\t\t<ShadowStyle\n\t\t\t\t\t\t\t\tshadowStyle={{ ...slideInfo.navigation.shadow_element }}\n\t\t\t\t\t\t\t\tonChange={(newStyle, newState) => {\n\t\t\t\t\t\t\t\t\tsetAttributes({ slideInfo: { ...slideInfo, navigation: { ...slideInfo.navigation, shadow_element: newState, shadow_result: newStyle.style } } });\n\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t</PanelBody>\n\n\t\t\t\t\t<PanelBody title={__(\"Pagenation Setting\", 'itmar_mv_blocks')} initialOpen={false}>\n\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\tlabel={__('Display', 'itmar_mv_blocks')}\n\t\t\t\t\t\t\tchecked={slideInfo.pagination.disp}\n\t\t\t\t\t\t\tonChange={(newVal) => {\n\t\t\t\t\t\t\t\tsetAttributes({ slideInfo: { ...slideInfo, pagination: { ...slideInfo.pagination, disp: newVal } } })\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{slideInfo.pagination.disp &&\n\t\t\t\t\t\t\t<div className='itmar_title_type'>\n\t\t\t\t\t\t\t\t<RadioControl\n\t\t\t\t\t\t\t\t\tlabel={__(\"Design type\", 'itmar_mv_blocks')}\n\t\t\t\t\t\t\t\t\tselected={slideInfo.pagination.design}\n\t\t\t\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t\t\t\t{ label: __(\"Default\", 'itmar_mv_blocks'), value: 'default' },\n\t\t\t\t\t\t\t\t\t\t{ label: __(\"Bar\", 'itmar_mv_blocks'), value: 'bar' },\n\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\tonChange={(newVal) => {\n\t\t\t\t\t\t\t\t\t\tsetAttributes({ slideInfo: { ...slideInfo, pagination: { ...slideInfo.pagination, design: newVal } } })\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t}\n\t\t\t\t\t</PanelBody>\n\t\t\t\t\t<PanelBody title={__(\"ScrollBar Setting\", 'itmar_mv_blocks')} initialOpen={false}>\n\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\tlabel={__('Display', 'itmar_mv_blocks')}\n\t\t\t\t\t\t\tchecked={slideInfo.scrollbar.disp}\n\t\t\t\t\t\t\tonChange={(newVal) => {\n\t\t\t\t\t\t\t\tsetAttributes({ slideInfo: { ...slideInfo, scrollbar: { ...slideInfo.scrollbar, disp: newVal } } })\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</PanelBody>\n\t\t\t\t</PanelBody>\n\n\t\t\t</InspectorControls>\n\n\t\t\t<InspectorControls group=\"styles\">\n\t\t\t\t<PanelBody title={__(\"Content Style\", 'itmar_mv_blocks')} initialOpen={true} className=\"form_design_ctrl\">\n\t\t\t\t\t<RangeControl\n\t\t\t\t\t\tlabel={!isMobile ?\n\t\t\t\t\t\t\t__(\"Width settings(desk top)\", 'itmar_mv_blocks')\n\t\t\t\t\t\t\t: __(\"Width settings(mobile)\", 'itmar_mv_blocks')}\n\t\t\t\t\t\tvalue={!isMobile ? default_val.width : mobile_val.width}\n\n\t\t\t\t\t\tmax={100}\n\t\t\t\t\t\tmin={30}\n\t\t\t\t\t\tstep={10}\n\t\t\t\t\t\tonChange={value => setAttributes(!isMobile ?\n\t\t\t\t\t\t\t{ default_val: { ...default_val, width: value } }\n\t\t\t\t\t\t\t: { mobile_val: { ...mobile_val, width: value } }\n\t\t\t\t\t\t)}\n\t\t\t\t\t\twithInputField={true}\n\t\t\t\t\t/>\n\t\t\t\t\t<RangeControl\n\t\t\t\t\t\tlabel={!isMobile ?\n\t\t\t\t\t\t\t__(\"Height settings(desk top)\", 'itmar_mv_blocks')\n\t\t\t\t\t\t\t: __(\"Height settings(mobile)\", 'itmar_mv_blocks')}\n\t\t\t\t\t\tvalue={!isMobile ? default_val.height : mobile_val.height}\n\n\t\t\t\t\t\tmax={100}\n\t\t\t\t\t\tmin={10}\n\t\t\t\t\t\tstep={10}\n\t\t\t\t\t\tonChange={value => setAttributes(!isMobile ?\n\t\t\t\t\t\t\t{ default_val: { ...default_val, height: value } }\n\t\t\t\t\t\t\t: { mobile_val: { ...mobile_val, height: value } }\n\t\t\t\t\t\t)}\n\t\t\t\t\t\twithInputField={true}\n\t\t\t\t\t/>\n\t\t\t\t\t<BoxControl\n\t\t\t\t\t\tlabel={!isMobile ?\n\t\t\t\t\t\t\t__(\"Padding settings(desk top)\", 'itmar_mv_blocks')\n\t\t\t\t\t\t\t: __(\"Padding settings(mobile)\", 'itmar_mv_blocks')}\n\t\t\t\t\t\tvalues={!isMobile ? default_val.padding_content : mobile_val.padding_content}\n\t\t\t\t\t\tonChange={value => setAttributes(!isMobile ?\n\t\t\t\t\t\t\t{ default_val: { ...default_val, padding_content: value } }\n\t\t\t\t\t\t\t: { mobile_val: { ...mobile_val, padding_content: value } }\n\t\t\t\t\t\t)}\n\t\t\t\t\t\tunits={units}\t// 許可する単位\n\t\t\t\t\t\tallowReset={true}\t// リセットの可否\n\t\t\t\t\t\tresetValues={!isMobile ? padding_resetValues : padding_mobile_resetValues}\t// リセット時の値\n\t\t\t\t\t/>\n\n\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\tlabel={__('Is Shadow', 'itmar_mv_blocks')}\n\t\t\t\t\t\tchecked={is_shadow}\n\t\t\t\t\t\tonChange={(newVal) => {\n\t\t\t\t\t\t\tsetAttributes({ is_shadow: newVal })\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t{is_shadow &&\n\t\t\t\t\t\t<ShadowStyle\n\t\t\t\t\t\t\tshadowStyle={{ ...shadow_element }}\n\t\t\t\t\t\t\tonChange={(newStyle, newState) => {\n\t\t\t\t\t\t\t\tsetAttributes({ shadow_result: newStyle.style });\n\t\t\t\t\t\t\t\tsetAttributes({ shadow_element: newState })\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t</PanelBody>\n\t\t\t\t<PanelBody\n\t\t\t\t\ttitle={!isMobile ?\n\t\t\t\t\t\t__(\"Position moveable(desk top)\", 'itmar_mv_blocks')\n\t\t\t\t\t\t: __(\"Position moveable(mobile)\", 'itmar_mv_blocks')}\n\t\t\t\t\tinitialOpen={true}\n\t\t\t\t>\n\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\tlabel={__('make it moveable', 'itmar_mv_blocks')}\n\t\t\t\t\t\tchecked={!isMobile ? default_val.is_moveable : mobile_val.is_moveable}\n\t\t\t\t\t\tonChange={(value) => {\n\t\t\t\t\t\t\tsetAttributes(!isMobile ?\n\t\t\t\t\t\t\t\t{ default_val: { ...default_val, is_moveable: value } }\n\t\t\t\t\t\t\t\t: { mobile_val: { ...mobile_val, is_moveable: value } }\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t{(!isMobile ? default_val.is_moveable : mobile_val.is_moveable) &&\n\t\t\t\t\t\t<DraggableBox\n\t\t\t\t\t\t\tattributes={!isMobile ? default_val.position : mobile_val.position}\n\t\t\t\t\t\t\tonPositionChange={(pos) => setAttributes(!isMobile ?\n\t\t\t\t\t\t\t\t{ default_val: { ...default_val, position: pos } }\n\t\t\t\t\t\t\t\t: { mobile_val: { ...mobile_val, position: pos } })}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\n\t\t\t\t</PanelBody>\n\t\t\t</InspectorControls>\n\n\t\t\t<BlockControls>\n\t\t\t\t<ToolbarDropdownMenu\n\t\t\t\t\tlabel={__('Lateral Position', 'itmar_mv_blocks')}\n\t\t\t\t\ticon={(!isMobile ? default_val.lat_pos : mobile_val.lat_pos) ?\n\t\t\t\t\t\talignIconMap[!isMobile ? default_val.lat_pos : mobile_val.lat_pos]\n\t\t\t\t\t\t: alignIconMap['center']}\n\t\t\t\t\tcontrols={['left', 'center', 'right'].map(align => ({\n\t\t\t\t\t\ticon: alignIconMap[align],\n\t\t\t\t\t\tisActive: (!isMobile ? default_val.lat_pos : mobile_val.lat_pos) === align,\n\t\t\t\t\t\tonClick: () => setAttributes(!isMobile ?\n\t\t\t\t\t\t\t{ default_val: { ...default_val, lat_pos: align } }\n\t\t\t\t\t\t\t: { mobile_val: { ...mobile_val, lat_pos: align } }),\n\t\t\t\t\t}))}\n\t\t\t\t/>\n\t\t\t</BlockControls>\n\n\n\t\t\t<StyleComp\n\t\t\t\tattributes={attributes}\n\t\t\t>\n\t\t\t\t<div {...blockProps}>\n\t\t\t\t\t<div className='swiper' ref={swiperRef}>\n\t\t\t\t\t\t<div {...innerBlocksProps}></div>\n\t\t\t\t\t</div>\n\t\t\t\t\t{/* <!-- ナビゲーションボタンの表示 --> */}\n\t\t\t\t\t<div class=\"swiper-button-prev\"></div>\n\t\t\t\t\t<div class=\"swiper-button-next\"></div>\n\t\t\t\t\t{/* <!-- ページネーションの表示 --> */}\n\t\t\t\t\t<div class=\"swiper-pagination\"></div>\n\t\t\t\t\t{/* <!-- スクロールバーの表示 --> */}\n\t\t\t\t\t<div class=\"swiper-scrollbar\"></div>\n\t\t\t\t</div>\n\t\t\t</StyleComp>\n\t\t</>\n\t);\n}\n"],"names":["useElementBackgroundColor","blockRef","style","baseColor","setBaseColor","useState","useEffect","current","backgroundColor","startsWith","computedStyles","getComputedStyle","useIsIframeMobile","isMobile","setIsMobile","checkIframeSize","iframeInstance","document","getElementsByName","contentWindow","innerWidth","addEventListener","removeEventListener","useDeepCompareEffect","callback","dependencies","dependenciesRef","useRef","isEqual","useDraggingMove","isMovable","position","onPositionChange","elmposition","x","y","isDragging","mousePosition","element","classList","remove","pos_value_x","match","pos_value_y","parseInt","handleMouseDown","event","add","clientX","clientY","handleMouseMove","dx","dy","newPosition","transform","handleMouseUp","handleMouseLeave","DraggableBox","props","attributes","chagePosition","value","cordinate","newPos","createElement","Fragment","PanelBody","title","__","initialOpen","PanelRow","className","UnitControl","dragDirection","onChange","label","Button","variant","onClick","useStyleIframe","StyleComp","iframeDocument","contentDocument","sheet","ServerStyleSheet","renderToString","collectStyles","styleContent","getStyleTags","replace","iframeStyleTag","innerHTML","head","appendChild","removeChild","padding_resetValues","top","left","right","bottom","padding_mobile_resetValues","units","alignIconMap","justifyLeft","center","justifyCenter","justifyRight","effectModule","coverflow","EffectCoverflow","coverflow_2","cube","EffectCube","flip","EffectFlip","cards","EffectCards","findAllBlocksOfType","blocks","blockType","foundBlocks","forEach","block","name","push","innerBlocks","length","Edit","setAttributes","clientId","default_val","mobile_val","is_shadow","slideInfo","shadow_element","blockProps","useBlockProps","ref","new_shadow","ShadowElm","shadow_result","is_moveable","innerBlocksProps","useInnerBlocksProps","template","allowedBlocks","templateLock","useSelect","select","getBlocks","updateBlockAttributes","useDispatch","innerBlock","newAttributes","is_swiper","imageBlocks","imageBlock","effectOption","none","centeredSlides","slidesPerView","mobilePerView","defaultPerView","spaceBetween","mobileBetween","defaultBetween","effect","coverflowEffect","rotate","depth","stretch","modifier","scale","slideShadows","cubeEffect","shadow","shadowOffset","shadowScale","on","slideChangeTransitionStart","this","el","slideChangeTransitionEnd","flipEffect","limitRotation","cardsEffect","perSlideOffset","perSlideRotate","swiperRef","swiperInstance","parentElement","querySelectorAll","bullet","destroy","createSwiperObj","moduleArray","swiperOptions","simulateTouch","loop","navigation","disp","Navigation","nextButton","querySelector","prevButton","nextEl","prevEl","pagination","Pagination","scrollbar","Scrollbar","modules","Swiper","navigationBgColor","setNavigationBgColor","bgColor","navigationBgGradient","setNavigationBgGradient","bgGradient","base_color","undefined","InspectorControls","group","ToggleControl","checked","newVal","RangeControl","autoplay","max","min","step","withInputField","help","RadioControl","selected","options","cubeZoom","design","mobileHorizenPos","defaultHorizonPos","mobileVertPos","defaultVertPos","hoverAppear","PanelColorGradientSettings","settings","colorValue","gradientValue","onColorChange","newValue","onGradientChange","ShadowStyle","shadowStyle","newStyle","newState","width","height","BoxControl","values","padding_content","allowReset","resetValues","pos","BlockControls","ToolbarDropdownMenu","icon","lat_pos","controls","map","align","isActive","class"],"sourceRoot":""}